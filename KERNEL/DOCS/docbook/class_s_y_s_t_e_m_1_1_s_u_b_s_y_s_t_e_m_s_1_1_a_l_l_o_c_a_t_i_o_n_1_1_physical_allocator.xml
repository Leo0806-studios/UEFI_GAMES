<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_y_s_t_e_m_1_1_s_u_b_s_y_s_t_e_m_s_1_1_a_l_l_o_c_a_t_i_o_n_1_1_physical_allocator" xml:lang="en-US">
<title>SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator Class Reference</title>
<indexterm><primary>SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator</primary></indexterm>
<para>

<para>handles allocation of physical pages. for now relatively epthy. its just in a class for later if i want to add specific state </para>
 
</para>
<para>
<computeroutput>#include &lt;ALLOCATION.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void * <link linkend="_class_s_y_s_t_e_m_1_1_s_u_b_s_y_s_t_e_m_s_1_1_a_l_l_o_c_a_t_i_o_n_1_1_physical_allocator_1a1053ed21d2988a2cc7fded090c27e91e">AllocatePAge</link> ()</para>

<para>allocates a single page faster thann AllocatePages for a single page as it does not have to do size checking returns a pointer to the first valid adress inside the page. the offset from the beginning of the page is not stable and might change based on the format and size of the header information. dont rely on it </para>
</listitem>
            <listitem><para>bool <link linkend="_class_s_y_s_t_e_m_1_1_s_u_b_s_y_s_t_e_m_s_1_1_a_l_l_o_c_a_t_i_o_n_1_1_physical_allocator_1ad78aa200acc4a62616824d708736a244">FreePage</link> (void *ptr)</para>

<para>frees asingle page. faster than FreePages as it doesnt have to do bounds checking. performs a check if the pointer is a valid page pinter. (at a offset that coresponnds to the sizeof the header and some other checks). if the poiner is invalid it will return false. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>handles allocation of physical pages. for now relatively epthy. its just in a class for later if i want to add specific state </para>
<para>
Definition at line <link linkend="__a_l_l_o_c_a_t_i_o_n_8h_source_1l00012">12</link> of file <link linkend="__a_l_l_o_c_a_t_i_o_n_8h_source">ALLOCATION.h</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_y_s_t_e_m_1_1_s_u_b_s_y_s_t_e_m_s_1_1_a_l_l_o_c_a_t_i_o_n_1_1_physical_allocator_1a1053ed21d2988a2cc7fded090c27e91e"/><section>
    <title>AllocatePAge()</title>
<indexterm><primary>AllocatePAge</primary><secondary>SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator</secondary></indexterm>
<indexterm><primary>SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator</primary><secondary>AllocatePAge</secondary></indexterm>
<para><computeroutput>void * SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator::AllocatePAge ( )<computeroutput>[nodiscard]</computeroutput></computeroutput></para><para>

<para>allocates a single page faster thann AllocatePages for a single page as it does not have to do size checking returns a pointer to the first valid adress inside the page. the offset from the beginning of the page is not stable and might change based on the format and size of the header information. dont rely on it </para>
</para>

<para><formalpara><title>Returns</title>

<para></para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_s_y_s_t_e_m_1_1_s_u_b_s_y_s_t_e_m_s_1_1_a_l_l_o_c_a_t_i_o_n_1_1_physical_allocator_1ad78aa200acc4a62616824d708736a244"/><section>
    <title>FreePage()</title>
<indexterm><primary>FreePage</primary><secondary>SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator</secondary></indexterm>
<indexterm><primary>SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator</primary><secondary>FreePage</secondary></indexterm>
<para><computeroutput>bool SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator::FreePage (void * ptr)<computeroutput>[nodiscard]</computeroutput></computeroutput></para><para>

<para>frees asingle page. faster than FreePages as it doesnt have to do bounds checking. performs a check if the pointer is a valid page pinter. (at a offset that coresponnds to the sizeof the header and some other checks). if the poiner is invalid it will return false. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ptr</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
HEADER/SUBSYSTEMS/ALLOCATION/ALLOCATION.h</section>
</section>
