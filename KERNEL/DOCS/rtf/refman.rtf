{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\info 
{\title {\comment OSDEV  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0.0.01 \par
}}OSDEV}
{\comment Generated by doxygen 1.14.0.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt OSDEV}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 0.0.01\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Namespace List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented namespaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b SYSTEM::DRIVERS::PCI} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All pci driver are in this namespace })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::STARTUP::GDT} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Everything gdt related is contained in this namespace. this include the gdt entries and functions like creating it and loading it. the gdt itself is stored in the N {\b SYSTEM_INFO} namespace })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::STARTUP::PAGING} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Everything related to paging. also contains definition for the global page map })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::SUBSYSTEMS::ALLOCATION} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Everything related to memory allocation is inside this namespace })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::SUBSYSTEMS::CONSOLE} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Console} subsystem })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::SUBSYSTEMS::RENDER::SIMPLE} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple render interface to be used in pre driver mode. all draw functions in this namespace are used to draw to the framebuffer directly })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::SYSTEM_INFO} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This namespace contains system information that is collected during the boot process })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
16X8 hardcoded char for asimple font used in the early stages of initalisation of the kernel })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::SUBSYSTEMS::CONSOLE::Console} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::SUBSYSTEMS::CONSOLE::ConsoleInfo} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information about the console })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::STARTUP::GDT::GDT_ENTRY} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Entry inside the gdt })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::STARTUP::PAGING::GlobalPageMap} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure of the global page map })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::SUBSYSTEMS::ALLOCATION::PageHeader} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header inserted onto a allocation allocated with the physical allocator. is in the beginning of the first page of the allocation. do not rely on its internal layout (for byte wise accses) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::STARTUP::PAGING::PageMapEntry} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an entry in a page map, containing information about a physical memory region })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles allocation of physical pages. for now relatively epthy. its just in a class for later if i want to add specific state })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::SUBSYSTEMS::RENDER::RenderState} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redner state class. a global singeton that holds the current render state })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::SYSTEM_INFO::SystemInfo} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System info is a global singleton that contains information about the system })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uefi leftovers are all contained in there. thismainly includes infomation about the memory map })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b MAIN.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HEADER/{\b NAMESPACE_DOCS.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HEADER/DRIVERS/PCI/{\b PCI.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HEADER/STARTUP/GDT/{\b GDT.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HEADER/STARTUP/PAGE_MAP/{\b PAGE_MAP.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HEADER/SUBSYSTEMS/ALLOCATION/{\b ALLOCATION.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HEADER/SUBSYSTEMS/CONSOLE/{\b CONSOLE.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HEADER/SUBSYSTEMS/RENDER/{\b RENDER.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HEADER/SYTEM_INFO/{\b SYSTEM_INFO.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b SOURCE/DRIVERS/PCI/{\b PCI.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b SOURCE/STARTUP/PAGE_MAP/{\b PAGE_MAP.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b SOURCE/SUBSYSTEMS/ALLOCATION/{\b ALLOCATION.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b SOURCE/SUBSYSTEMS/CONSOLE/{\b CONSOLE.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b SOURCE/SUBSYSTEMS/RENDER/{\b RENDER.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b SOURCE/SYSTEM_INFO/{\b SYSTEM_INFO.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::DRIVERS::PCI Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::DRIVERS::PCI}
{\xe \v SYSTEM::DRIVERS::PCI}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
all pci driver are in this namespace }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
all pci driver are in this namespace \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::STARTUP::GDT Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::STARTUP::GDT}
{\xe \v SYSTEM::STARTUP::GDT}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
everything gdt related is contained in this namespace. this include the gdt entries and functions like creating it and loading it. the gdt itself is stored in the N {\b SYSTEM_INFO} namespace. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b GDT_ENTRY}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
entry inside the gdt. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
everything gdt related is contained in this namespace. this include the gdt entries and functions like creating it and loading it. the gdt itself is stored in the N {\b SYSTEM_INFO} namespace. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::STARTUP::PAGING Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::STARTUP::PAGING}
{\xe \v SYSTEM::STARTUP::PAGING}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
contains everything related to paging. also contains definition for the global page map }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GlobalPageMap}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
structure of the global page map. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PageMapEntry}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an entry in a page map, containing information about a physical memory region. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UEFI_LEFTOWER}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
uefi leftovers are all contained in there. thismainly includes infomation about the memory map }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum class {\b PageType} \{ {\b Free} = 0
, {\b MMIO} = 1
, {\b Allocated} = 2
, {\b EFI_Reserved} = 3
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
types of pages in the global page table. everything above the specified types is reserved. dont depend on the order of the types as they may change in the future. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b QueryInstalledRam} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
queries the installed ram. first runn is slower than subsequent runs. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
contains everything related to paging. also contains definition for the global page map \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v PageType\:SYSTEM::STARTUP::PAGING}
{\xe \v SYSTEM::STARTUP::PAGING\:PageType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum class {\b SYSTEM::STARTUP::PAGING::PageType}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
types of pages in the global page table. everything above the specified types is reserved. dont depend on the order of the types as they may change in the future. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v MMIO\:SYSTEM::STARTUP::PAGING}
{\xe \v SYSTEM::STARTUP::PAGING\:MMIO}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid MMIO{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
memory mapped io. this includes efi_memorymapedIO_port and port_space \par
}\cell }{\row }
{\xe \v Allocated\:SYSTEM::STARTUP::PAGING}
{\xe \v SYSTEM::STARTUP::PAGING\:Allocated}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Allocated{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
simple allocated memory. \par
}\cell }{\row }
{\xe \v EFI_Reserved\:SYSTEM::STARTUP::PAGING}
{\xe \v SYSTEM::STARTUP::PAGING\:EFI_Reserved}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid EFI_Reserved{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this is for naow a catch all for every reserved tpye in the uefi memory map translated into the global page table \par
}\cell }{\row }
}
{
Definition at line {\b 43} of file {\b PAGE_MAP.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v QueryInstalledRam\:SYSTEM::STARTUP::PAGING}
{\xe \v SYSTEM::STARTUP::PAGING\:QueryInstalledRam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::STARTUP::PAGING::QueryInstalledRam (){\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
queries the installed ram. first runn is slower than subsequent runs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
amount of installed ram in bytes\par
}}}{
Definition at line {\b 14} of file {\b PAGE_MAP.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::SUBSYSTEMS::ALLOCATION Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::SUBSYSTEMS::ALLOCATION}
{\xe \v SYSTEM::SUBSYSTEMS::ALLOCATION}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
everything related to memory allocation is inside this namespace }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PageHeader}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
header inserted onto a allocation allocated with the physical allocator. is in the beginning of the first page of the allocation. do not rely on its internal layout (for byte wise accses) }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PhysicalAllocator}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
handles allocation of physical pages. for now relatively epthy. its just in a class for later if i want to add specific state }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b PageType} = {\b SYSTEM::STARTUP::PAGING::PageType}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
everything related to memory allocation is inside this namespace \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v PageType\:SYSTEM::SUBSYSTEMS::ALLOCATION}
{\xe \v SYSTEM::SUBSYSTEMS::ALLOCATION\:PageType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using {\b SYSTEM::SUBSYSTEMS::ALLOCATION::PageType} = {\b SYSTEM::STARTUP::PAGING::PageType}}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b ALLOCATION.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::SUBSYSTEMS::CONSOLE Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::SUBSYSTEMS::CONSOLE}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the console subsystem }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b __CONSOLE__STRUCTURE}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Console}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ConsoleInfo}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
contains information about the console }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HandleContolChar} (wchar_t chr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
hadles the control char chr (ascii control char) will modify the data inside the ConsoleStructure so re getting the cursor pos is neccesary }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isControlChar} (wchar_t chr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ConsoleInfo} {\b QueryConsoleInfo} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the console subsystem \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v HandleContolChar\:SYSTEM::SUBSYSTEMS::CONSOLE}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE\:HandleContolChar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SYSTEM::SUBSYSTEMS::CONSOLE::HandleContolChar (wchar_t chr)}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
hadles the control char chr (ascii control char) will modify the data inside the ConsoleStructure so re getting the cursor pos is neccesary }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chr} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tabs are 4 tabs in this os by default\par
}{
Definition at line {\b 37} of file {\b CONSOLE.cpp}.}\par
}
{\xe \v isControlChar\:SYSTEM::SUBSYSTEMS::CONSOLE}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE\:isControlChar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SYSTEM::SUBSYSTEMS::CONSOLE::isControlChar (wchar_t chr)}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b CONSOLE.cpp}.}\par
}
{\xe \v QueryConsoleInfo\:SYSTEM::SUBSYSTEMS::CONSOLE}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE\:QueryConsoleInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ConsoleInfo} SYSTEM::SUBSYSTEMS::CONSOLE::QueryConsoleInfo ()}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 98} of file {\b CONSOLE.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::SUBSYSTEMS::RENDER::SIMPLE Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE}
{\xe \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE}
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
simple render interface to be used in pre driver mode. all draw functions in this namespace are used to draw to the framebuffer directly. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CHAR}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
represents a 16X8 hardcoded char for asimple font used in the early stages of initalisation of the kernel }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SimpleDrawChar} (unsigned int x, unsigned int y, wchar_t c)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
draws a char to the framebuffer at the specified position. will pint a A if the char is not in the font. draws directly to the framebuffer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SimpleDrawString} (const wchar_t *str, unsigned int x, unsigned int y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
draws a string to the framebuffer at the specified position. calls SimpleDrawChar for each char in the string. cant handle any controll characters. treats every char as 10 pixels wide. does not handle wrapping }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int * {\b FramebufferBase} = nullptr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b FramebufferWidth} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b FramebufferHeight} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b PixelsPerScanline} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CHAR} {\b SimpleFont} [255]\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a hardcoded external font for now only contains the ASCII upercase latin letters }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TranslationTable} [256]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
simple render interface to be used in pre driver mode. all draw functions in this namespace are used to draw to the framebuffer directly. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v SimpleDrawChar\:SYSTEM::SUBSYSTEMS::RENDER::SIMPLE}
{\xe \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE\:SimpleDrawChar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::SimpleDrawChar (unsigned int x, unsigned int y, wchar_t c)}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
draws a char to the framebuffer at the specified position. will pint a A if the char is not in the font. draws directly to the framebuffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i c} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 1125} of file {\b RENDER.cpp}.}\par
}
{\xe \v SimpleDrawString\:SYSTEM::SUBSYSTEMS::RENDER::SIMPLE}
{\xe \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE\:SimpleDrawString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::SimpleDrawString (const wchar_t * str, unsigned int x, unsigned int y)}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
draws a string to the framebuffer at the specified position. calls SimpleDrawChar for each char in the string. cant handle any controll characters. treats every char as 10 pixels wide. does not handle wrapping }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i str} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 1145} of file {\b RENDER.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v FramebufferBase\:SYSTEM::SUBSYSTEMS::RENDER::SIMPLE}
{\xe \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE\:FramebufferBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int * SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::FramebufferBase = nullptr}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b RENDER.cpp}.}\par
}
{\xe \v FramebufferHeight\:SYSTEM::SUBSYSTEMS::RENDER::SIMPLE}
{\xe \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE\:FramebufferHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::FramebufferHeight = 0}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b RENDER.cpp}.}\par
}
{\xe \v FramebufferWidth\:SYSTEM::SUBSYSTEMS::RENDER::SIMPLE}
{\xe \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE\:FramebufferWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::FramebufferWidth = 0}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b RENDER.cpp}.}\par
}
{\xe \v PixelsPerScanline\:SYSTEM::SUBSYSTEMS::RENDER::SIMPLE}
{\xe \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE\:PixelsPerScanline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::PixelsPerScanline = 0}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b RENDER.cpp}.}\par
}
{\xe \v SimpleFont\:SYSTEM::SUBSYSTEMS::RENDER::SIMPLE}
{\xe \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE\:SimpleFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR} SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::SimpleFont}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a hardcoded external font for now only contains the ASCII upercase latin letters }}\par
{
Definition at line {\b 11} of file {\b RENDER.cpp}.}\par
}
{\xe \v TranslationTable\:SYSTEM::SUBSYSTEMS::RENDER::SIMPLE}
{\xe \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE\:TranslationTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::TranslationTable[256]}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1011} of file {\b RENDER.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::SYSTEM_INFO Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::SYSTEM_INFO}
{\xe \v SYSTEM::SYSTEM_INFO}
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this namespace contains system information that is collected during the boot process. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SystemInfo}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
system info is a global singleton that contains information about the system }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b QueryCPUFrequency} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SYSTEM::STARTUP::PAGING::GlobalPageMap} {\b GlobalPageMap} = \{\}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the global page map. this contains information about the usage of physical pages }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this namespace contains system information that is collected during the boot process. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v QueryCPUFrequency\:SYSTEM::SYSTEM_INFO}
{\xe \v SYSTEM::SYSTEM_INFO\:QueryCPUFrequency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::SYSTEM_INFO::QueryCPUFrequency (){\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 33} of file {\b SYSTEM_INFO.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v GlobalPageMap\:SYSTEM::SYSTEM_INFO}
{\xe \v SYSTEM::SYSTEM_INFO\:GlobalPageMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SYSTEM::STARTUP::PAGING::GlobalPageMap} SYSTEM::SYSTEM_INFO::GlobalPageMap = \{\}}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the global page map. this contains information about the usage of physical pages }}\par
{
Definition at line {\b 6} of file {\b SYSTEM_INFO.cpp}.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE Class Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b __CONSOLE__STRUCTURE} (const {\b __CONSOLE__STRUCTURE} &other)=delete{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b __CONSOLE__STRUCTURE} ({\b __CONSOLE__STRUCTURE} &&other)=delete{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b __CONSOLE__STRUCTURE} & {\b operator=} (const {\b __CONSOLE__STRUCTURE} &other)=delete{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b __CONSOLE__STRUCTURE} & {\b operator=} ({\b __CONSOLE__STRUCTURE} &&other)=delete{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b buffer} =nullptr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b bufferSize} =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b collums} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b rows} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b cursorPosRows} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b cursorPosCollums} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b pixelsPerRow} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b pixxelsPerCollum} = 0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Console::InitConsole} (size_t collums, size_t rows, size_t pixelsperRow, size_t pixelsperCollum){\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 7} of file {\b CONSOLE.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v buffer\:SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE\:buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE::buffer =nullptr}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b CONSOLE.cpp}.}\par
}
{\xe \v bufferSize\:SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE\:bufferSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE::bufferSize =0}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b CONSOLE.cpp}.}\par
}
{\xe \v collums\:SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE\:collums}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE::collums = 0}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b CONSOLE.cpp}.}\par
}
{\xe \v cursorPosCollums\:SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE\:cursorPosCollums}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE::cursorPosCollums = 0}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b CONSOLE.cpp}.}\par
}
{\xe \v cursorPosRows\:SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE\:cursorPosRows}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE::cursorPosRows = 0}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b CONSOLE.cpp}.}\par
}
{\xe \v pixelsPerRow\:SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE\:pixelsPerRow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE::pixelsPerRow = 0}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b CONSOLE.cpp}.}\par
}
{\xe \v pixxelsPerCollum\:SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE\:pixxelsPerCollum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE::pixxelsPerCollum = 0}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b CONSOLE.cpp}.}\par
}
{\xe \v rows\:SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE\:rows}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::SUBSYSTEMS::CONSOLE::__CONSOLE__STRUCTURE::rows = 0}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b CONSOLE.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SOURCE/SUBSYSTEMS/CONSOLE/CONSOLE.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR Struct Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR}
{\xe \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR}
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
represents a 16X8 hardcoded char for asimple font used in the early stages of initalisation of the kernel }}\par
{
{\f2 #include <RENDER.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b width}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the actua lwidth of the char. can be used to improve spacing between characters }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b height}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the actual height of the char. can be used to improve spacing between characters }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b Color}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the colour of the char }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b BMP} [16]\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
bitmap of the char. max char size is 16X8 }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
represents a 16X8 hardcoded char for asimple font used in the early stages of initalisation of the kernel \par
}{
Definition at line {\b 17} of file {\b RENDER.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v BMP\:SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR}
{\xe \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR\:BMP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR::BMP[16]}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
bitmap of the char. max char size is 16X8 }}\par
{
Definition at line {\b 36} of file {\b RENDER.h}.}\par
}
{\xe \v c\:SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR}
{\xe \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR\:c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR::c}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b RENDER.h}.}\par
}
{\xe \v Color\:SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR}
{\xe \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR\:Color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR::Color}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the colour of the char }}\par
{
Definition at line {\b 32} of file {\b RENDER.h}.}\par
}
{\xe \v height\:SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR}
{\xe \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR::height}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the actual height of the char. can be used to improve spacing between characters }}\par
{
Definition at line {\b 26} of file {\b RENDER.h}.}\par
}
{\xe \v width\:SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR}
{\xe \v SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR::width}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the actua lwidth of the char. can be used to improve spacing between characters }}\par
{
Definition at line {\b 22} of file {\b RENDER.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HEADER/SUBSYSTEMS/RENDER/RENDER.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::SUBSYSTEMS::CONSOLE::Console Class Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::SUBSYSTEMS::CONSOLE::Console}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::Console}
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b InitConsole} (size_t collums, size_t rows, size_t pixelsperRow, size_t pixelsperCollum)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inits the console. must be called before any other console function can safely be used. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b WriteLine} (const wchar_t *str)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
writes a line to the console out }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b WriteF} (size_t args, const char *format,...)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
analog to printf. takes a format string and avariable amount of input additinaly it takse the amount of extra args as a parameter to increase safety }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Write} (const wchar_t *str)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
writes an unformated string to the console. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b ConsoleInfo} {\b QueryConsoleInfo} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
returns a instance of {\b ConsoleInfo} containing information about the console }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b ClearConsole} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
clears the console and moves the cursor to 0,0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Flush} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flushes the console buffer to the screen does nothing in early init while redering draws directly to the framebuffer }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b ToggleANSICodes} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
toggles if the console should use ANSICodes or not. this is used to enable or disable color and other formatting codes. returns true if the codes are now enabled, false if they are now disabled. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 23} of file {\b CONSOLE.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ClearConsole\:SYSTEM::SUBSYSTEMS::CONSOLE::Console}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::Console\:ClearConsole}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SYSTEM::SUBSYSTEMS::CONSOLE::Console::ClearConsole (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
clears the console and moves the cursor to 0,0 }}\par
{
Definition at line {\b 102} of file {\b CONSOLE.cpp}.}\par
}
{\xe \v Flush\:SYSTEM::SUBSYSTEMS::CONSOLE::Console}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::Console\:Flush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SYSTEM::SUBSYSTEMS::CONSOLE::Console::Flush (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flushes the console buffer to the screen does nothing in early init while redering draws directly to the framebuffer }}\par
{
Definition at line {\b 105} of file {\b CONSOLE.cpp}.}\par
}
{\xe \v InitConsole\:SYSTEM::SUBSYSTEMS::CONSOLE::Console}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::Console\:InitConsole}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SYSTEM::SUBSYSTEMS::CONSOLE::Console::InitConsole (size_t collums, size_t rows, size_t pixelsperRow, size_t pixelsperCollum){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inits the console. must be called before any other console function can safely be used. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i collums} \cell }{amount of collums to use. does nothing rn\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rows} \cell }{amount of rows. does nothing rn\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pixelsperRow} \cell }{influences vertial spacing should larger than the max size of a character or clipping might occur.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pixelsperCollum} \cell }{influences horizontal spacing. should be larger than the widht o a character or clipping might occur\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
succses is true\par
}}}{
Definition at line {\b 59} of file {\b CONSOLE.cpp}.}\par
}
{\xe \v QueryConsoleInfo\:SYSTEM::SUBSYSTEMS::CONSOLE::Console}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::Console\:QueryConsoleInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b ConsoleInfo} SYSTEM::SUBSYSTEMS::CONSOLE::Console::QueryConsoleInfo (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
returns a instance of {\b ConsoleInfo} containing information about the console }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}}
{\xe \v ToggleANSICodes\:SYSTEM::SUBSYSTEMS::CONSOLE::Console}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::Console\:ToggleANSICodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SYSTEM::SUBSYSTEMS::CONSOLE::Console::ToggleANSICodes (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
toggles if the console should use ANSICodes or not. this is used to enable or disable color and other formatting codes. returns true if the codes are now enabled, false if they are now disabled. }}\par
{
Definition at line {\b 108} of file {\b CONSOLE.cpp}.}\par
}
{\xe \v Write\:SYSTEM::SUBSYSTEMS::CONSOLE::Console}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::Console\:Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SYSTEM::SUBSYSTEMS::CONSOLE::Console::Write (const wchar_t * str){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
writes an unformated string to the console. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i str} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 80} of file {\b CONSOLE.cpp}.}\par
}
{\xe \v WriteF\:SYSTEM::SUBSYSTEMS::CONSOLE::Console}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::Console\:WriteF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SYSTEM::SUBSYSTEMS::CONSOLE::Console::WriteF (size_t args, const char * format,  ...){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
analog to printf. takes a format string and avariable amount of input additinaly it takse the amount of extra args as a parameter to increase safety }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i format} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 77} of file {\b CONSOLE.cpp}.}\par
}
{\xe \v WriteLine\:SYSTEM::SUBSYSTEMS::CONSOLE::Console}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::Console\:WriteLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SYSTEM::SUBSYSTEMS::CONSOLE::Console::WriteLine (const wchar_t * str){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
writes a line to the console out }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i str} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 68} of file {\b CONSOLE.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HEADER/SUBSYSTEMS/CONSOLE/CONSOLE.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SOURCE/SUBSYSTEMS/CONSOLE/CONSOLE.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::SUBSYSTEMS::CONSOLE::ConsoleInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::SUBSYSTEMS::CONSOLE::ConsoleInfo}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::ConsoleInfo}
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
contains information about the console }}\par
{
{\f2 #include <CONSOLE.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b buffer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b collums}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b rows}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b scrollingEnabled}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
contains information about the console \par
}{
Definition at line {\b 12} of file {\b CONSOLE.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v buffer\:SYSTEM::SUBSYSTEMS::CONSOLE::ConsoleInfo}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::ConsoleInfo\:buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::SUBSYSTEMS::CONSOLE::ConsoleInfo::buffer}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b CONSOLE.h}.}\par
}
{\xe \v collums\:SYSTEM::SUBSYSTEMS::CONSOLE::ConsoleInfo}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::ConsoleInfo\:collums}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::SUBSYSTEMS::CONSOLE::ConsoleInfo::collums}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b CONSOLE.h}.}\par
}
{\xe \v rows\:SYSTEM::SUBSYSTEMS::CONSOLE::ConsoleInfo}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::ConsoleInfo\:rows}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::SUBSYSTEMS::CONSOLE::ConsoleInfo::rows}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b CONSOLE.h}.}\par
}
{\xe \v scrollingEnabled\:SYSTEM::SUBSYSTEMS::CONSOLE::ConsoleInfo}
{\xe \v SYSTEM::SUBSYSTEMS::CONSOLE::ConsoleInfo\:scrollingEnabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SYSTEM::SUBSYSTEMS::CONSOLE::ConsoleInfo::scrollingEnabled}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b CONSOLE.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HEADER/SUBSYSTEMS/CONSOLE/CONSOLE.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::STARTUP::GDT::GDT_ENTRY Struct Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::STARTUP::GDT::GDT_ENTRY}
{\xe \v SYSTEM::STARTUP::GDT::GDT_ENTRY}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
entry inside the gdt. }}\par
{
{\f2 #include <GDT.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b limit}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b base}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b _base}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b accses_byte}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b limit_flags}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b __base}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
entry inside the gdt. \par
}{
Definition at line {\b 14} of file {\b GDT.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v __base\:SYSTEM::STARTUP::GDT::GDT_ENTRY}
{\xe \v SYSTEM::STARTUP::GDT::GDT_ENTRY\:__base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char SYSTEM::STARTUP::GDT::GDT_ENTRY::__base}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b GDT.h}.}\par
}
{\xe \v _base\:SYSTEM::STARTUP::GDT::GDT_ENTRY}
{\xe \v SYSTEM::STARTUP::GDT::GDT_ENTRY\:_base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char SYSTEM::STARTUP::GDT::GDT_ENTRY::_base}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b GDT.h}.}\par
}
{\xe \v accses_byte\:SYSTEM::STARTUP::GDT::GDT_ENTRY}
{\xe \v SYSTEM::STARTUP::GDT::GDT_ENTRY\:accses_byte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char SYSTEM::STARTUP::GDT::GDT_ENTRY::accses_byte}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b GDT.h}.}\par
}
{\xe \v base\:SYSTEM::STARTUP::GDT::GDT_ENTRY}
{\xe \v SYSTEM::STARTUP::GDT::GDT_ENTRY\:base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short SYSTEM::STARTUP::GDT::GDT_ENTRY::base}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b GDT.h}.}\par
}
{\xe \v limit\:SYSTEM::STARTUP::GDT::GDT_ENTRY}
{\xe \v SYSTEM::STARTUP::GDT::GDT_ENTRY\:limit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short SYSTEM::STARTUP::GDT::GDT_ENTRY::limit}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b GDT.h}.}\par
}
{\xe \v limit_flags\:SYSTEM::STARTUP::GDT::GDT_ENTRY}
{\xe \v SYSTEM::STARTUP::GDT::GDT_ENTRY\:limit_flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char SYSTEM::STARTUP::GDT::GDT_ENTRY::limit_flags}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b GDT.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HEADER/STARTUP/GDT/GDT.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::STARTUP::PAGING::GlobalPageMap Class Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::STARTUP::PAGING::GlobalPageMap}
{\xe \v SYSTEM::STARTUP::PAGING::GlobalPageMap}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
structure of the global page map. }}\par
{
{\f2 #include <PAGE_MAP.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b AllocatePAgeMap} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
allocated the global pagemap and translates the uefi memory map into it. every that is not EfiConventionalMemory is considered reserved. all memorymaped io is considered MMIO. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
structure of the global page map. \par
}{
Definition at line {\b 79} of file {\b PAGE_MAP.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AllocatePAgeMap\:SYSTEM::STARTUP::PAGING::GlobalPageMap}
{\xe \v SYSTEM::STARTUP::PAGING::GlobalPageMap\:AllocatePAgeMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SYSTEM::STARTUP::PAGING::GlobalPageMap::AllocatePAgeMap (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
allocated the global pagemap and translates the uefi memory map into it. every that is not EfiConventionalMemory is considered reserved. all memorymaped io is considered MMIO. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
sucsess is true\par
}}}{
Definition at line {\b 35} of file {\b PAGE_MAP.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HEADER/STARTUP/PAGE_MAP/PAGE_MAP.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SOURCE/STARTUP/PAGE_MAP/PAGE_MAP.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::SUBSYSTEMS::ALLOCATION::PageHeader Struct Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::SUBSYSTEMS::ALLOCATION::PageHeader}
{\xe \v SYSTEM::SUBSYSTEMS::ALLOCATION::PageHeader}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
header inserted onto a allocation allocated with the physical allocator. is in the beginning of the first page of the allocation. do not rely on its internal layout (for byte wise accses) }}\par
{
{\f2 #include <ALLOCATION.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b amoutofPages} = 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
default to zero for error catching }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b usable} = nullptr\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pointer to the usable area. this is used for error checking }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
header inserted onto a allocation allocated with the physical allocator. is in the beginning of the first page of the allocation. do not rely on its internal layout (for byte wise accses) \par
}{
Definition at line {\b 12} of file {\b ALLOCATION.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v amoutofPages\:SYSTEM::SUBSYSTEMS::ALLOCATION::PageHeader}
{\xe \v SYSTEM::SUBSYSTEMS::ALLOCATION::PageHeader\:amoutofPages}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::SUBSYSTEMS::ALLOCATION::PageHeader::amoutofPages = 0}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
default to zero for error catching }}\par
{
Definition at line {\b 16} of file {\b ALLOCATION.h}.}\par
}
{\xe \v usable\:SYSTEM::SUBSYSTEMS::ALLOCATION::PageHeader}
{\xe \v SYSTEM::SUBSYSTEMS::ALLOCATION::PageHeader\:usable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* SYSTEM::SUBSYSTEMS::ALLOCATION::PageHeader::usable = nullptr}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pointer to the usable area. this is used for error checking }}\par
{
Definition at line {\b 20} of file {\b ALLOCATION.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HEADER/SUBSYSTEMS/ALLOCATION/ALLOCATION.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::STARTUP::PAGING::PageMapEntry Class Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::STARTUP::PAGING::PageMapEntry}
{\xe \v SYSTEM::STARTUP::PAGING::PageMapEntry}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an entry in a page map, containing information about a physical memory region. }}\par
{
{\f2 #include <PAGE_MAP.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GlobalPageMap}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the global page map. this contains information about the usage of physical pages }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an entry in a page map, containing information about a physical memory region. \par
}{
Definition at line {\b 63} of file {\b PAGE_MAP.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v GlobalPageMap\:SYSTEM::STARTUP::PAGING::PageMapEntry}
{\xe \v SYSTEM::STARTUP::PAGING::PageMapEntry\:GlobalPageMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b GlobalPageMap}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the global page map. this contains information about the usage of physical pages }}\par
{
Definition at line {\b 64} of file {\b PAGE_MAP.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HEADER/STARTUP/PAGE_MAP/PAGE_MAP.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator Class Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator}
{\xe \v SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
handles allocation of physical pages. for now relatively epthy. its just in a class for later if i want to add specific state }}\par
{
{\f2 #include <ALLOCATION.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b AllocatePAge} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
allocates a single page faster thann AllocatePages for a single page as it does not have to do size checking returns a pointer to the first valid adress inside the page. the offset from the beginning of the page is not stable and might change based on the format and size of the header information. dont rely on it }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b FreePage} (void *ptr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
frees asingle page. faster than FreePages as it doesnt have to do bounds checking. performs a check if the pointer is a valid page pinter. (at a offset that coresponnds to the sizeof the header and some other checks). if the poiner is invalid it will return false. nullptr is also invalid }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
handles allocation of physical pages. for now relatively epthy. its just in a class for later if i want to add specific state \par
}{
Definition at line {\b 27} of file {\b ALLOCATION.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AllocatePAge\:SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator}
{\xe \v SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator\:AllocatePAge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator::AllocatePAge (){\f2 [nodiscard]}}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
allocates a single page faster thann AllocatePages for a single page as it does not have to do size checking returns a pointer to the first valid adress inside the page. the offset from the beginning of the page is not stable and might change based on the format and size of the header information. dont rely on it }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 9} of file {\b ALLOCATION.cpp}.}\par
}
{\xe \v FreePage\:SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator}
{\xe \v SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator\:FreePage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator::FreePage (void * ptr){\f2 [nodiscard]}}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
frees asingle page. faster than FreePages as it doesnt have to do bounds checking. performs a check if the pointer is a valid page pinter. (at a offset that coresponnds to the sizeof the header and some other checks). if the poiner is invalid it will return false. nullptr is also invalid }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ptr} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 32} of file {\b ALLOCATION.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HEADER/SUBSYSTEMS/ALLOCATION/ALLOCATION.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SOURCE/SUBSYSTEMS/ALLOCATION/ALLOCATION.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::SUBSYSTEMS::RENDER::RenderState Class Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::SUBSYSTEMS::RENDER::RenderState}
{\xe \v SYSTEM::SUBSYSTEMS::RENDER::RenderState}
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
redner state class. a global singeton that holds the current render state. }}\par
{
{\f2 #include <RENDER.h>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
redner state class. a global singeton that holds the current render state. \par
}{
Definition at line {\b 70} of file {\b RENDER.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HEADER/SUBSYSTEMS/RENDER/RENDER.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::SYSTEM_INFO::SystemInfo Class Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::SYSTEM_INFO::SystemInfo}
{\xe \v SYSTEM::SYSTEM_INFO::SystemInfo}
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
system info is a global singleton that contains information about the system }}\par
{
{\f2 #include <SYSTEM_INFO.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b InitSystemInfo} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inits the system info. it is imutable after this point. dont call any of the functions in this class before this function is called. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b SystemInfo} & {\b GetInstance} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
returns the global instance of the system info }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b installedRam} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b cpuCores} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
system info is a global singleton that contains information about the system \par
}{
Definition at line {\b 17} of file {\b SYSTEM_INFO.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetInstance\:SYSTEM::SYSTEM_INFO::SystemInfo}
{\xe \v SYSTEM::SYSTEM_INFO::SystemInfo\:GetInstance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b SystemInfo} & SYSTEM::SYSTEM_INFO::SystemInfo::GetInstance (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
returns the global instance of the system info }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 25} of file {\b SYSTEM_INFO.cpp}.}\par
}
{\xe \v InitSystemInfo\:SYSTEM::SYSTEM_INFO::SystemInfo}
{\xe \v SYSTEM::SYSTEM_INFO::SystemInfo\:InitSystemInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SYSTEM::SYSTEM_INFO::SystemInfo::InitSystemInfo (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inits the system info. it is imutable after this point. dont call any of the functions in this class before this function is called. }}\par
{
Definition at line {\b 18} of file {\b SYSTEM_INFO.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v cpuCores\:SYSTEM::SYSTEM_INFO::SystemInfo}
{\xe \v SYSTEM::SYSTEM_INFO::SystemInfo\:cpuCores}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::SYSTEM_INFO::SystemInfo::cpuCores = 0}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b SYSTEM_INFO.h}.}\par
}
{\xe \v installedRam\:SYSTEM::SYSTEM_INFO::SystemInfo}
{\xe \v SYSTEM::SYSTEM_INFO::SystemInfo\:installedRam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::SYSTEM_INFO::SystemInfo::installedRam = 0}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b SYSTEM_INFO.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HEADER/SYTEM_INFO/SYSTEM_INFO.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SOURCE/SYSTEM_INFO/SYSTEM_INFO.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER Class Reference\par \pard\plain 
{\tc\tcl2 \v SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER}
{\xe \v SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
uefi leftovers are all contained in there. thismainly includes infomation about the memory map }}\par
{
{\f2 #include <PAGE_MAP.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static EFI_MEMORY_DESCRIPTOR__ {\b EFI_MEMORY_DESCRIPTOR_} = nullptr\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a void pointer to the EFI_MEMORY_DESCRIPTOR structure. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static size_t {\b EFI_MEMORY_MAP_SIZE} = 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the size of the EFI memory map in bytes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static size_t {\b EFI_MEMORY_DESCRIPTOR_SIZE} = 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the size of the EFI_MEMORY_DESCRIPTOR structure in bytes. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
uefi leftovers are all contained in there. thismainly includes infomation about the memory map \par
}{
Definition at line {\b 23} of file {\b PAGE_MAP.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v EFI_MEMORY_DESCRIPTOR_\:SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER}
{\xe \v SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER\:EFI_MEMORY_DESCRIPTOR_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EFI_MEMORY_DESCRIPTOR__ SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER::EFI_MEMORY_DESCRIPTOR_ = nullptr{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a void pointer to the EFI_MEMORY_DESCRIPTOR structure. }}\par
{
Definition at line {\b 28} of file {\b PAGE_MAP.h}.}\par
}
{\xe \v EFI_MEMORY_DESCRIPTOR_SIZE\:SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER}
{\xe \v SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER\:EFI_MEMORY_DESCRIPTOR_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER::EFI_MEMORY_DESCRIPTOR_SIZE = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the size of the EFI_MEMORY_DESCRIPTOR structure in bytes. }}\par
{
Definition at line {\b 36} of file {\b PAGE_MAP.h}.}\par
}
{\xe \v EFI_MEMORY_MAP_SIZE\:SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER}
{\xe \v SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER\:EFI_MEMORY_MAP_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER::EFI_MEMORY_MAP_SIZE = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the size of the EFI memory map in bytes. }}\par
{
Definition at line {\b 32} of file {\b PAGE_MAP.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HEADER/STARTUP/PAGE_MAP/PAGE_MAP.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SOURCE/STARTUP/PAGE_MAP/PAGE_MAP.cpp\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PCI.h\par \pard\plain 
{\tc\tcl2 \v HEADER/DRIVERS/PCI/PCI.h}
{\xe \v HEADER/DRIVERS/PCI/PCI.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf17 namespace }SYSTEM \{\par
00003     {\cf17 namespace }DRIVERS\par
00004     \{\par
00008         {\cf17 namespace }PCI\par
00009         \{\par
00010             \par
00011         \}\par
00012 \par
00013     \}\par
00014 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NAMESPACE_DOCS.h\par \pard\plain 
{\tc\tcl2 \v HEADER/NAMESPACE_DOCS.h}
{\xe \v HEADER/NAMESPACE_DOCS.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GDT.h\par \pard\plain 
{\tc\tcl2 \v HEADER/STARTUP/GDT/GDT.h}
{\xe \v HEADER/STARTUP/GDT/GDT.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf17 namespace }SYSTEM \{\par
00003     {\cf17 namespace }STARTUP \{\par
00009         {\cf17 namespace }GDT \{\par
00014             {\cf17 struct }GDT_ENTRY \{\par
00015                 {\cf18 unsigned} {\cf18 short} limit;\par
00016                 {\cf18 unsigned} {\cf18 short} base;\par
00017                 {\cf18 unsigned} {\cf18 char} _base;\par
00018                 {\cf18 unsigned} {\cf18 char} accses_byte;\par
00019                 {\cf18 unsigned} {\cf18 char} limit_flags;\par
00020                 {\cf18 unsigned}  {\cf18 char} __base;\par
00021 \par
00022                 GDT_ENTRY() = {\cf19 default};\par
00023             \};\par
00024         \}\par
00025     \}\par
00026 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PAGE_MAP.h\par \pard\plain 
{\tc\tcl2 \v HEADER/STARTUP/PAGE_MAP/PAGE_MAP.h}
{\xe \v HEADER/STARTUP/PAGE_MAP/PAGE_MAP.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf17 using  }EFI_MEMORY_DESCRIPTOR__ = {\cf18 void}*;\par
00003 {\cf17 namespace }SYSTEM::SUBSYSTEMS::ALLOCATION \{\par
00004     {\cf17 class }PhysicalAllocator;\par
00005 \}\par
00006 {\cf17 namespace }SYSTEM \{\par
00007     {\cf17 namespace }STARTUP \{\par
00011         {\cf17 namespace }PAGING \{\par
00012 \par
00018             {\cf17 extern} {\cf18 size_t} QueryInstalledRam();\par
00019 \par
00023             {\cf17 class }UEFI_LEFTOWER \{\par
00024             {\cf17 public}:\par
00028                 {\cf17 static} EFI_MEMORY_DESCRIPTOR__ EFI_MEMORY_DESCRIPTOR_;\par
00032                 {\cf17 static} {\cf18 size_t} EFI_MEMORY_MAP_SIZE;\par
00036                 {\cf17 static} {\cf18 size_t} EFI_MEMORY_DESCRIPTOR_SIZE;\par
00037             \};\par
00043             {\cf17 enum class} PageType \{\par
00044                 Free = 0,\par
00049                 MMIO = 1,\par
00053                 Allocated = 2,\par
00057                 EFI_Reserved = 3\par
00058 \par
00059             \};\par
00063             {\cf17 class }PageMapEntry \{\par
00064                 {\cf17 friend} {\cf17 class }GlobalPageMap;\par
00065                 {\cf17 friend} SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator;\par
00066 \par
00067                 {\cf18 size_t} physicalStart;\par
00068                 PageType Type;\par
00072                 {\cf18 bool} isFree = {\cf17 false};\par
00073 \par
00074             \};\par
00077             \par
00079             {\cf17 class }GlobalPageMap \{\par
00080                 {\cf18 size_t} sizeBytes = 0;\par
00081                 {\cf18 size_t} size_pages = 0;\par
00082                 {\cf18 size_t} etries = 0;\par
00086                 PageMapEntry* Entrys;\par
00087 \par
00088                 {\cf17 friend} SYSTEM::SUBSYSTEMS::ALLOCATION::PhysicalAllocator;\par
00089             {\cf17 public}:\par
00096                 {\cf17 static} {\cf18 bool} AllocatePAgeMap();\par
00097 \par
00098                 \par
00099 \par
00100             \};\par
00101         \}\par
00102     \}\par
00103 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ALLOCATION.h\par \pard\plain 
{\tc\tcl2 \v HEADER/SUBSYSTEMS/ALLOCATION/ALLOCATION.h}
{\xe \v HEADER/SUBSYSTEMS/ALLOCATION/ALLOCATION.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf17 namespace }SYSTEM \{\par
00003     {\cf17 namespace }SUBSYSTEMS \{\par
00007         {\cf17 namespace }ALLOCATION\{\par
00012             {\cf17 struct }PageHeader \{\par
00016                 {\cf18 size_t} amoutofPages = 0;\par
00020                 {\cf18 void}* usable = {\cf17 nullptr};\par
00021 \par
00022             \};\par
00027             {\cf17 class }PhysicalAllocator \{\par
00028             {\cf17 public}:\par
00036                 [[nodiscard({\cf22 "discarding the adress of the allocated page will lead to a memory leak as it cant be freed anymore"})]] \par
00037                 {\cf18 void}* AllocatePAge();\par
00045                 [[nodiscard({\cf22 "discarding the retun of this function can lead to leaks or undetected memory coruption"})]]\par
00046                 {\cf18 bool} FreePage({\cf18 void}* ptr);\par
00047             \};\par
00048         \}\par
00049     \}\par
00050 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CONSOLE.h\par \pard\plain 
{\tc\tcl2 \v HEADER/SUBSYSTEMS/CONSOLE/CONSOLE.h}
{\xe \v HEADER/SUBSYSTEMS/CONSOLE/CONSOLE.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf17 namespace }SYSTEM \{\par
00003     {\cf17 namespace }SUBSYSTEMS \{\par
00007         {\cf17 namespace }CONSOLE \{\par
00012             {\cf17 struct }ConsoleInfo \{\par
00013             {\cf17 private}:\par
00014                 \par
00015             {\cf17 public}:\par
00016                 {\cf18 size_t} buffer;\par
00017                 {\cf18 size_t} collums;\par
00018                 {\cf18 size_t} rows;\par
00019                 {\cf18 bool} scrollingEnabled;\par
00020 \par
00021             \};\par
00022 \par
00023             {\cf17 class }Console \{\par
00024             {\cf17 public}:\par
00033             {\cf17 static} {\cf18 bool} InitConsole( {\cf18 size_t} collums, {\cf18 size_t} rows, {\cf18 size_t} pixelsperRow,{\cf18 size_t} pixelsperCollum);\par
00038             {\cf17 static} {\cf18 void} WriteLine({\cf17 const} {\cf18 wchar_t}* str);\par
00045             {\cf17 static} {\cf18 void} WriteF({\cf18 size_t} args ,{\cf17 const} {\cf18 char}* format, ...);\par
00050             {\cf17 static} {\cf18 void} Write({\cf17 const} {\cf18 wchar_t}* str);\par
00055             {\cf17 static} {\cf17 const} ConsoleInfo QueryConsoleInfo();\par
00059             {\cf17 static} {\cf18 void} ClearConsole();\par
00064             {\cf17 static} {\cf18 void} Flush();\par
00070             {\cf17 static} {\cf18 bool} ToggleANSICodes();\par
00071             \};\par
00072 \par
00073         \}\par
00074     \}\par
00075 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RENDER.h\par \pard\plain 
{\tc\tcl2 \v HEADER/SUBSYSTEMS/RENDER/RENDER.h}
{\xe \v HEADER/SUBSYSTEMS/RENDER/RENDER.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf17 namespace }SYSTEM::SUBSYSTEMS::RENDER \{\par
00003     {\cf17 namespace }COLOURS \{\par
00004         {\cf17 constexpr} {\cf18 unsigned} {\cf18 int} White = 0xffffffff;\par
00005     \}\par
00009     {\cf17 namespace }SIMPLE \{\par
00010         {\cf17 extern} {\cf18 unsigned} {\cf18 int}* FramebufferBase;\par
00011         {\cf17 extern} {\cf18 unsigned} {\cf18 int} FramebufferWidth;\par
00012         {\cf17 extern} {\cf18 unsigned} {\cf18 int} FramebufferHeight;\par
00013         {\cf17 extern} {\cf18 unsigned} {\cf18 int} PixelsPerScanline;\par
00017         {\cf17 struct }CHAR \{\par
00018             {\cf18 char} c; {\cf20 // the char itself}\par
00022             {\cf18 unsigned} {\cf18 char} width;\par
00026                 {\cf18 unsigned} {\cf18 char} height;\par
00027         {\cf17 private}:\par
00028         {\cf17 public}:\par
00032             {\cf18 unsigned} {\cf18 int} Color;\par
00036             {\cf18 unsigned} {\cf18 char} BMP[16];\par
00037         \};\par
00042         {\cf17 extern} CHAR SimpleFont[255];\par
00043 \par
00052         {\cf18 void} SimpleDrawChar({\cf18 unsigned} {\cf18 int} x, {\cf18 unsigned} {\cf18 int} y, {\cf18 wchar_t} c);\par
00053 \par
00063          {\cf18 void} SimpleDrawString({\cf17 const} {\cf18 wchar_t}* str, {\cf18 unsigned} {\cf18 int} x, {\cf18 unsigned} {\cf18 int} y);\par
00064 \par
00065     \}\par
00070     {\cf17 class }RenderState \{\par
00071     {\cf17 private}:\par
00072         \par
00073 \par
00074 \par
00075         RenderState* Singeton = {\cf17 nullptr};\par
00076     \};\par
00077 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM_INFO.h\par \pard\plain 
{\tc\tcl2 \v HEADER/SYTEM_INFO/SYSTEM_INFO.h}
{\xe \v HEADER/SYTEM_INFO/SYSTEM_INFO.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include "../STARTUP/PAGE_MAP/PAGE_MAP.h"}\par
00003 {\cf21 #include "../STARTUP/GDT/GDT.h"}\par
00004 {\cf17 namespace }SYSTEM \{\par
00008     {\cf17 namespace }SYSTEM_INFO \{\par
00012         {\cf17 extern} SYSTEM::STARTUP::PAGING::GlobalPageMap GlobalPageMap;\par
00013 \par
00017         {\cf17 class }SystemInfo \{\par
00018         {\cf17 public}:\par
00019             {\cf18 size_t} installedRam = 0;\par
00020             {\cf18 size_t} cpuCores = 0;\par
00021         {\cf17 private}:\par
00022             SystemInfo({\cf17 const} SystemInfo& other) = {\cf17 delete};\par
00023             SystemInfo& operator=({\cf17 const} SystemInfo& other)={\cf17 delete};\par
00024             SystemInfo(SystemInfo&& other);\par
00025             SystemInfo& operator=(SystemInfo&& other);\par
00026             SystemInfo() = {\cf19 default};\par
00027             {\cf17 static} SystemInfo GLobalInst;\par
00028         {\cf17 public}:\par
00033             {\cf17 static} {\cf18 void} InitSystemInfo();\par
00038             {\cf17 static} {\cf17 const} SystemInfo& GetInstance();\par
00039 \par
00040         \};\par
00041     \}\par
00042 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MAIN.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 extern}{\cf22 "C"} \{\par
00002 \par
00003 {\cf21 #include <gnu-efi/inc/efi.h>}\par
00004 {\cf21 #include <gnu-efi/inc/efilib.h>}\par
00005 \}\par
00006 {\cf21 #include "HEADER/SUBSYSTEMS/RENDER/RENDER.h"}\par
00007 {\cf21 #include "HEADER/STARTUP/PAGE_MAP/PAGE_MAP.h"}\par
00008 {\cf21 #include "HEADER/SUBSYSTEMS/CONSOLE/CONSOLE.h"}\par
00009 {\cf21 #include "HEADER/STARTUP/PAGE_MAP/PAGE_MAP.h"}\par
00010 {\cf21 #include "HEADER/SYTEM_INFO/SYSTEM_INFO.h"}\par
00011 {\cf21 #include <intrin.h>}\par
00012 uint32_t get_cpu_base_freq_mhz() \{\par
00013     {\cf18 int} cpuInfo[4];\par
00014     __cpuid(cpuInfo, 0x16);\par
00015 \par
00016     {\cf19 if} (cpuInfo[0] == 0) \{\par
00017         {\cf19 return} 0; {\cf20 // Unsupported}\par
00018     \}\par
00019 \par
00020     {\cf19 return} {\cf17 static_cast<}{\cf18 unsigned} {\cf18 int}{\cf17 >}(cpuInfo[0]);  {\cf20 // EAX = Base frequency in MHz}\par
00021 \}\par
00022 {\cf18 void} stall_us(uint64_t microseconds, uint64_t cpu_mhz) \{\par
00023     uint64_t start = __rdtsc();\par
00024     uint64_t ticks = microseconds * cpu_mhz;\par
00025 \par
00026     {\cf19 while} ((__rdtsc() - start) < ticks) \{\par
00027         _mm_pause(); {\cf20 // hint to CPU: spin-wait loop}\par
00028     \}\par
00029 \}\par
00030 {\cf17 using }Console = SYSTEM::SUBSYSTEMS::CONSOLE::Console;\par
00031 {\cf17 extern} {\cf22 "C"}\{\par
00032 EFI_STATUS _KERNEL_MAIN(EFI_HANDLE ImageHandle, EFI_SYSTEM_TABLE* SystemTable)\par
00033 \{\par
00034     InitializeLib(ImageHandle, SystemTable);\par
00035 \par
00036     Print(L{\cf22 "Hello, World!\\n"});\par
00037     SystemTable->ConOut->ClearScreen(SystemTable->ConOut);\par
00038     {\cf20 //getMemory map}\par
00039     EFI_MEMORY_DESCRIPTOR* MemoryMap = NULL;\par
00040     UINTN MemoryMapSize = 0;\par
00041     UINTN MapKey = 0;\par
00042     UINTN DescriptorSize = 0;\par
00043     UINT32 DescriptorVersion = 0;\par
00044 \par
00045     {\cf20 //}\par
00046     EFI_STATUS Status = SystemTable->BootServices->GetMemoryMap(&MemoryMapSize, MemoryMap, &MapKey, &DescriptorSize, &DescriptorVersion);\par
00047     {\cf19 if} (Status == EFI_BUFFER_TOO_SMALL) \{\par
00048         MemoryMapSize += DescriptorSize * 100; {\cf20 // Allocate more space than needed}\par
00049         Status = SystemTable->BootServices->AllocatePool(EfiLoaderData, MemoryMapSize, ({\cf18 void}**)&MemoryMap);\par
00050         {\cf19 if} (EFI_ERROR(Status)) \{\par
00051             Print(L{\cf22 "Failed to allocate memory for the memory map.\\n"});\par
00052             {\cf19 return} Status;\par
00053         \}\par
00054         Status = SystemTable->BootServices->GetMemoryMap(&MemoryMapSize, MemoryMap, &MapKey, &DescriptorSize, &DescriptorVersion);\par
00055         {\cf19 if} (EFI_ERROR(Status)) \{\par
00056             Print(L{\cf22 "Failed to get memory map.\\n"});\par
00057             {\cf19 return} Status;\par
00058         \}\par
00059     \}\par
00060     {\cf20 //saving the memory map to the uefi leftover in the page map}\par
00061     SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER::EFI_MEMORY_DESCRIPTOR_ = MemoryMap;\par
00062     SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER::EFI_MEMORY_MAP_SIZE = MemoryMapSize;\par
00063     SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER::EFI_MEMORY_DESCRIPTOR_SIZE = DescriptorSize;\par
00064     Print(L{\cf22 "memory map Aquired"});\par
00065     {\cf20 //print mamp}\par
00066     {\cf18 bool} a = {\cf17 false};\par
00067     {\cf19 for} (UINTN i = 0; i < MemoryMapSize / DescriptorSize; i++) \{\par
00068         EFI_MEMORY_DESCRIPTOR* Descriptor = (EFI_MEMORY_DESCRIPTOR*)((UINT8*)MemoryMap + i * DescriptorSize);\par
00069         Print(L{\cf22 "Type: %d, PhysicalStart: %lx, NumberOfPages: %lx  "} , Descriptor->Type, Descriptor->PhysicalStart, Descriptor->NumberOfPages);\par
00070         {\cf19 if} (a) \{\par
00071             Print(L{\cf22 "\\n"});\par
00072         \}\par
00073         a = !a;\par
00074     \}\par
00075 \par
00076     {\cf18 size_t} conventionlaRAM = 0;\par
00077     {\cf19 for} (UINTN i = 0; i < MemoryMapSize / DescriptorSize; i++) \{\par
00078         EFI_MEMORY_DESCRIPTOR* Descriptor = (EFI_MEMORY_DESCRIPTOR*)((UINT8*)MemoryMap + i * DescriptorSize);\par
00079         {\cf19 if} (Descriptor->Type == EfiConventionalMemory) \{\par
00080             conventionlaRAM += Descriptor->NumberOfPages * EFI_PAGE_SIZE;\par
00081         \}\par
00082         {\cf20 //Print(L"Type: %d, PhysicalStart: %lx, NumberOfPages: %lx  ", Descriptor->Type, Descriptor->PhysicalStart, Descriptor->NumberOfPages);}\par
00083         {\cf20 //SystemTable->BootServices->Stall(1000000); // Stall for 1 second to allow reading the output}\par
00084     \}\par
00085     Print(L{\cf22 "Total Conventional Memory: %d bytes\\n"}, conventionlaRAM);\par
00086     {\cf20 //print installed RAM size}\par
00087     SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER::EFI_MEMORY_DESCRIPTOR_ = {\cf17 reinterpret_cast<}{\cf18 void}*{\cf17 >}(MemoryMap);\par
00088     SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER::EFI_MEMORY_MAP_SIZE = MemoryMapSize;\par
00089     SYSTEM::STARTUP::PAGING::UEFI_LEFTOWER::EFI_MEMORY_DESCRIPTOR_SIZE = DescriptorSize;\par
00090     SYSTEM::SYSTEM_INFO::SystemInfo::InitSystemInfo();\par
00091     Print(L{\cf22 "Installed RAM: %d bytes\\n"}, SYSTEM::SYSTEM_INFO::SystemInfo::GetInstance().installedRam);\par
00092     SystemTable->BootServices->Stall(5000000); {\cf20 // Stall for 5 second to allow reading the output}\par
00093 \par
00094     {\cf20 // get graphics protocol}\par
00095     EFI_GRAPHICS_OUTPUT_PROTOCOL* GraphicsOutput = NULL;\par
00096     Status = SystemTable->BootServices->LocateProtocol(&gEfiGraphicsOutputProtocolGuid, NULL, ({\cf18 void}**)&GraphicsOutput);\par
00097     {\cf19 if} (EFI_ERROR(Status)) \{\par
00098         Print(L{\cf22 "Failed to locate Graphics Output Protocol.\\n"});\par
00099         {\cf19 return} Status;\par
00100     \}\par
00101     Print(L{\cf22 "Graphics Output Protocol located.\\n"});\par
00102     {\cf17 auto} b = GraphicsOutput->Mode->Info->VerticalResolution;\par
00103     Print(L{\cf22 "Resolution: %d x %d\\n"}, a, b);\par
00104     {\cf20 //=======================================EXIT_BOOT_SERVICES===============================================///}\par
00105     Status = SystemTable->BootServices->ExitBootServices(ImageHandle, MapKey);\par
00106     {\cf20 //fill framebuffer with red color}\par
00107     UINT32* FrameBuffer = (UINT32*)GraphicsOutput->Mode->FrameBufferBase;\par
00108     SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::FramebufferBase = FrameBuffer;\par
00109     SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::FramebufferHeight = GraphicsOutput->Mode->Info->VerticalResolution;\par
00110     SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::FramebufferWidth = GraphicsOutput->Mode->Info->HorizontalResolution;\par
00111     SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::PixelsPerScanline = GraphicsOutput->Mode->Info->PixelsPerScanLine;\par
00112     UINTN FrameBufferSize = GraphicsOutput->Mode->Info->HorizontalResolution * GraphicsOutput->Mode->Info->VerticalResolution;\par
00113     {\cf19 for} (UINTN i = 0; i < FrameBufferSize; i++) \{\par
00114     {\cf20 //  FrameBuffer[i] = 0xafa5ff; // Red color in ARGB format}\par
00115         FrameBuffer[i] = 0xa000ff; {\cf20 // Red color in ARGB format}\par
00116     \}\par
00117     Console::InitConsole(40, 40, 16, 8);\par
00118 \par
00119     Console::WriteLine(L{\cf22 "CONSOLE STARTED"});\par
00120     Console::WriteLine(L{\cf22 "CONSOLE TEST"});\par
00121     Console::WriteLine(L{\cf22 "ABCDEFGHIJKLMNOPQRSTUVWXYZ"});\par
00122     Console::WriteLine(L{\cf22 "abcdefghijklmnopqrstuvwxyz"});\par
00123     Console::WriteLine(L{\cf22 "1234567890"});\par
00124     Console::WriteLine(L{\cf22 "!\'A7$%&/()=?,.-#+*<>"});\par
00125     Console::WriteLine(L{\cf22 "KERNEL LOADING COMPLETE"});\par
00126     Console::WriteLine(L{\cf22 "SETTING UP GLOBAL PAGE TABLE..."});\par
00127     SYSTEM::STARTUP::PAGING::GlobalPageMap::AllocatePAgeMap();\par
00128 \par
00129 \par
00130     Console::WriteLine(L{\cf22 "SETTING UP GDT..."});\par
00131     {\cf20 //TODO insert call to setup of the GDT;}\par
00132     Console::WriteLine(L{\cf22 "GDT SETUP COMPLETE"});\par
00133 \par
00134     Console::WriteLine(L{\cf22 "SETTING UP IDT..."});\par
00135     {\cf20 //TODO insert call to setup of the IDT}\par
00136 \par
00137     Console::WriteLine(L{\cf22 "IDT SETUP COMPLETE"});\par
00138     {\cf18 size_t} freq = 0;\par
00139     freq = get_cpu_base_freq_mhz();\par
00140     {\cf19 if} (freq == 0) \{\par
00141         {\cf20 //set to fallback 3,6ghz}\par
00142         freq = 3600;\par
00143     \}\par
00144     stall_us(10000000, freq);\par
00145 \par
00146 \par
00147     SystemTable->RuntimeServices->ResetSystem(EfiResetShutdown, EFI_SUCCESS, 0, NULL);\par
00148     {\cf19 return} EFI_SUCCESS;\par
00149 \par
00150 \}\par
00151 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PCI.cpp\par \pard\plain 
{\tc\tcl2 \v SOURCE/DRIVERS/PCI/PCI.cpp}
{\xe \v SOURCE/DRIVERS/PCI/PCI.cpp}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include "../../../HEADER/DRIVERS/PCI/PCI.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PAGE_MAP.cpp\par \pard\plain 
{\tc\tcl2 \v SOURCE/STARTUP/PAGE_MAP/PAGE_MAP.cpp}
{\xe \v SOURCE/STARTUP/PAGE_MAP/PAGE_MAP.cpp}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 extern}{\cf22 "C"} \{\par
00002 {\cf21 #include <gnu-efi/inc/efi.h>}\par
00003 {\cf21 #include <gnu-efi/inc/efilib.h>}\par
00004 \}\par
00005 {\cf21 #include "../../../HEADER/SYTEM_INFO/SYSTEM_INFO.h"}\par
00006 {\cf21 #include "../../../HEADER/STARTUP/PAGE_MAP/PAGE_MAP.h"}\par
00007 {\cf17 namespace }SYSTEM \{\par
00008     {\cf17 namespace }STARTUP \{\par
00009         {\cf17 namespace }PAGING \{\par
00010 \par
00011             EFI_MEMORY_DESCRIPTOR__ UEFI_LEFTOWER::EFI_MEMORY_DESCRIPTOR_ = {\cf17 nullptr};\par
00012             {\cf18 size_t} UEFI_LEFTOWER::EFI_MEMORY_MAP_SIZE = 0;\par
00013             {\cf18 size_t} UEFI_LEFTOWER::EFI_MEMORY_DESCRIPTOR_SIZE = 0;\par
00014             {\cf18 size_t} QueryInstalledRam() \{\par
00015                 {\cf17 static} {\cf18 size_t} ram = 0;\par
00016                 {\cf19 if} (ram == 0) \{\par
00017                     EFI_MEMORY_DESCRIPTOR* memoryMap = {\cf17 reinterpret_cast<}EFI_MEMORY_DESCRIPTOR*{\cf17 >}(UEFI_LEFTOWER::EFI_MEMORY_DESCRIPTOR_);\par
00018                     ram = memoryMap->NumberOfPages * EFI_PAGE_SIZE;\par
00019                     {\cf18 size_t} descriptorSize = UEFI_LEFTOWER::EFI_MEMORY_DESCRIPTOR_SIZE;\par
00020                     {\cf18 size_t} conventionlaRAM = 0;\par
00021                     {\cf19 for} (UINTN i = 0; i < UEFI_LEFTOWER::EFI_MEMORY_MAP_SIZE / descriptorSize; i++) \{\par
00022                         EFI_MEMORY_DESCRIPTOR* Descriptor = (EFI_MEMORY_DESCRIPTOR*)((UINT8*)memoryMap + i * descriptorSize);\par
00023                         {\cf19 if} (Descriptor->Type == EfiConventionalMemory) \{\par
00024                             {\cf20 //Print(L"Conventional Memory found ");}\par
00025                             conventionlaRAM += Descriptor->NumberOfPages * EFI_PAGE_SIZE;\par
00026                         \}\par
00027                         {\cf20 //Print(L"Type: %d, PhysicalStart: %lx, NumberOfPages: %lx  ", Descriptor->Type, Descriptor->PhysicalStart, Descriptor->NumberOfPages);}\par
00028                         {\cf20 //SystemTable->BootServices->Stall(1000000); // Stall for 1 second to allow reading the output}\par
00029                         {\cf20 //Print(L"\\n");}\par
00030                     \}\par
00031                     ram = conventionlaRAM;\par
00032                 \}\par
00033                 {\cf19 return} ram;\par
00034             \}\par
00035             {\cf18 bool} GlobalPageMap::AllocatePAgeMap()\par
00036             \{\par
00037                 {\cf18 size_t} Ram = SYSTEM::SYSTEM_INFO::SystemInfo::GetInstance().installedRam;\par
00038                 {\cf19 if} (Ram == 0) \{\par
00039                     {\cf19 return} {\cf17 false}; {\cf20 // RAM not initialized}\par
00040                 \}\par
00041                 {\cf17 constexpr} {\cf18 size_t} pageSize = EFI_PAGE_SIZE;\par
00042                 {\cf18 size_t} pageCount = Ram / pageSize;\par
00043                 {\cf18 size_t} pageMapSize = pageCount * {\cf17 sizeof}(PageMapEntry);\par
00044                 {\cf20 //find a region in the uefi memory map large enough to fit the page map}\par
00045                 {\cf18 size_t} DescriptorSize = UEFI_LEFTOWER::EFI_MEMORY_DESCRIPTOR_SIZE;\par
00046                 {\cf20 //size_t memorymapSize = UEFI_LEFTOWER::EFI_MEMORY_MAP_SIZE;}\par
00047                 {\cf18 size_t} PhysicalStartOfMap = 0;\par
00048                 {\cf18 size_t} PagesUsedByMap = 0;\par
00049 \par
00050                 EFI_MEMORY_DESCRIPTOR* memoryMap = {\cf17 reinterpret_cast<}EFI_MEMORY_DESCRIPTOR*{\cf17 >}(UEFI_LEFTOWER::EFI_MEMORY_DESCRIPTOR_);\par
00051                 {\cf20 //enumerate the map}\par
00052                 {\cf19 for} (UINTN i = 0; i < UEFI_LEFTOWER::EFI_MEMORY_MAP_SIZE / DescriptorSize; i++) \{\par
00053                     EFI_MEMORY_DESCRIPTOR* Descriptor = (EFI_MEMORY_DESCRIPTOR*)((UINT8*)memoryMap + i * DescriptorSize);\par
00054                     {\cf19 if} (Descriptor->Type == EfiConventionalMemory && Descriptor->NumberOfPages * EFI_PAGE_SIZE >= pageMapSize) \{\par
00055                         PhysicalStartOfMap = Descriptor->PhysicalStart;\par
00056                         PagesUsedByMap = pageMapSize / pageSize;\par
00057                         {\cf19 break};\par
00058                     \}\par
00059                 \}\par
00060                 {\cf19 if} (PhysicalStartOfMap == 0 || PagesUsedByMap == 0) \{\par
00061                     {\cf19 return} {\cf17 false}; {\cf20 // No suitable memory region found}\par
00062                 \}\par
00063                 {\cf20 //now that we have a location for the map we can start recording the physical pages into it}\par
00064                 {\cf20 //this involves treating the found region as an array of PageMapEntry }\par
00065                 {\cf20 //to make these entrys usefull well enumerate the map again and record allready used regions into the map and recording their type.}\par
00066 \par
00067                 SYSTEM::SYSTEM_INFO::GlobalPageMap.Entrys = {\cf17 reinterpret_cast<}PageMapEntry*{\cf17 >}(PhysicalStartOfMap);\par
00068                 SYSTEM::SYSTEM_INFO::GlobalPageMap.sizeBytes = pageMapSize;\par
00069                 SYSTEM::SYSTEM_INFO::GlobalPageMap.size_pages = PagesUsedByMap;\par
00070                 SYSTEM::SYSTEM_INFO::GlobalPageMap.etries = pageCount;\par
00071                 {\cf19 for} ({\cf18 size_t} i = 0; i < pageCount; i++) \{\par
00072                     SYSTEM::SYSTEM_INFO::GlobalPageMap.Entrys[i].physicalStart = PhysicalStartOfMap + i * pageSize;\par
00073                     SYSTEM::SYSTEM_INFO::GlobalPageMap.Entrys[i].Type = PageType::Free; {\cf20 // Initialize as free}\par
00074                     SYSTEM::SYSTEM_INFO::GlobalPageMap.Entrys[i].isFree = {\cf17 true};\par
00075                 \}\par
00076                 {\cf20 //now we will enumerate the map again and record allready used regions into the map and recording their type.}\par
00077                 {\cf19 for} (UINTN i = 0; i < UEFI_LEFTOWER::EFI_MEMORY_MAP_SIZE / DescriptorSize; i++) \{\par
00078                     EFI_MEMORY_DESCRIPTOR* Descriptor = (EFI_MEMORY_DESCRIPTOR*)((UINT8*)memoryMap + i * DescriptorSize);\par
00079                     {\cf20 //base stuff necesary for all memory types}\par
00080 \par
00081                     UINT32 DescriptorType = Descriptor->Type;\par
00082 \par
00083                     {\cf18 void}* PhysicalBaase = {\cf17 reinterpret_cast<}{\cf18 void}*{\cf17 >}(Descriptor->PhysicalStart);\par
00084                     {\cf18 size_t} numPages = Descriptor->NumberOfPages;\par
00085                     {\cf18 size_t} FirstPage = {\cf17 reinterpret_cast<}uintptr_t{\cf17 >}(PhysicalBaase) / pageSize;\par
00086                     {\cf19 switch} (DescriptorType) \{\par
00087                         {\cf20 //first all the Reserved Memory stuuf. theyll all falltrough to the same thing to make it easier}\par
00088 \par
00089                     {\cf19 case} EfiReservedMemoryType: \{ __fallthrough; \}\par
00090                     {\cf19 case} EfiRuntimeServicesCode: \{ __fallthrough; \}\par
00091                     {\cf19 case} EfiRuntimeServicesData: \{ __fallthrough; \}\par
00092                     {\cf19 case} EfiUnusableMemory: \{ __fallthrough; \}\par
00093                     {\cf19 case} EfiACPIReclaimMemory: \{ __fallthrough; \}\par
00094                     {\cf19 case} EfiACPIMemoryNVS: \{ __fallthrough; \}\par
00095                     {\cf19 case} EfiPalCode: \{ __fallthrough; \}\par
00096                                    {\cf20 //all of the reserved memory descriptors falltrough to this}\par
00097                     {\cf19 case} EfiPersistentMemory: \{\par
00098                         {\cf20 //ill itterato trough all the pages and set thepaesin the oage table to be reserved}\par
00099                         {\cf19 for} ({\cf18 size_t} page = FirstPage; page < FirstPage + numPages; page++) \{\par
00100                             PageMapEntry& curr = SYSTEM_INFO::GlobalPageMap.Entrys[page];\par
00101                             curr.isFree = {\cf17 false};\par
00102                             {\cf20 //curr.physicalStart=PhysicalBaase //not neceary to reassign the physical base as this is done in the step before}\par
00103                             curr.Type = PageType::EFI_Reserved;{\cf20 // for now i dont differenciate between reserved memory types}\par
00104                         \}\par
00105 \par
00106                     \par
00107                         {\cf19 break};\par
00108                     \}\par
00109                                             {\cf20 //now il handle the maped io stuff}\par
00110                     {\cf19 case} EfiMemoryMappedIO: \{ __fallthrough; \}\par
00111                     {\cf19 case} EfiMemoryMappedIOPortSpace: \{\par
00112                         {\cf19 for} ({\cf18 size_t} page = FirstPage; page < FirstPage + numPages; page++) \{\par
00113 \par
00114                             PageMapEntry& curr = SYSTEM_INFO::GlobalPageMap.Entrys[page];\par
00115                             curr.isFree = {\cf17 false};{\cf20 //obviously mmio isnt free}\par
00116                             curr.Type = PageType::MMIO;\par
00117                         \}\par
00118                         {\cf19 break};\par
00119                     \}\par
00120                                                    {\cf20 //and now ill handle usable memory}\par
00121                     {\cf19 case} EfiConventionalMemory: \{\par
00122                         {\cf19 for} ({\cf18 size_t} page = FirstPage; page < FirstPage + numPages; page++) \{\par
00123 \par
00124                             PageMapEntry& curr = SYSTEM_INFO::GlobalPageMap.Entrys[page];\par
00125                             curr.isFree = {\cf17 true}; {\cf20 //this is free space}\par
00126                             curr.Type = PageType::Free;{\cf20 //and its frre}\par
00127                         \}\par
00128                         {\cf19 break};\par
00129                     \}\par
00130                     \}\par
00131                 \}\par
00132                 {\cf19 return} {\cf17 true};\par
00133 \par
00134             \}\par
00135         \}\par
00136     \}\par
00137 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ALLOCATION.cpp\par \pard\plain 
{\tc\tcl2 \v SOURCE/SUBSYSTEMS/ALLOCATION/ALLOCATION.cpp}
{\xe \v SOURCE/SUBSYSTEMS/ALLOCATION/ALLOCATION.cpp}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 extern} {\cf22 "C"} \{\par
00002 {\cf21 #include <gnu-efi/inc/efi.h>}\par
00003 \}\par
00004 {\cf21 #include "HEADER/SUBSYSTEMS/ALLOCATION/ALLOCATION.h"}\par
00005 {\cf21 #include "HEADER/SYTEM_INFO/SYSTEM_INFO.h"}\par
00006 {\cf21 #include "HEADER/STARTUP/PAGE_MAP/PAGE_MAP.h"}\par
00007 {\cf17 namespace }SYSTEM::SUBSYSTEMS::ALLOCATION\{\par
00008     {\cf17 using }PageType = SYSTEM::STARTUP::PAGING::PageType;\par
00009     {\cf18 void}* PhysicalAllocator::AllocatePAge()\par
00010     \{\par
00011         {\cf17 auto}& GlobalPageMap = SYSTEM::SYSTEM_INFO::GlobalPageMap;\par
00012         {\cf20 //itterate over the map and find asingle free page.}\par
00013         SYSTEM::STARTUP::PAGING::PageMapEntry* entry = {\cf17 nullptr};\par
00014         {\cf19 for} ({\cf18 size_t} index = 0; index < GlobalPageMap.etries; index++) \{\par
00015             {\cf17 auto}& curr = GlobalPageMap.Entrys[index];\par
00016             {\cf19 if} (curr.Type == PageType::Free) \{\par
00017                 entry = &curr;\par
00018                 entry->isFree = {\cf17 false};\par
00019                 entry->Type = PageType::Allocated;\par
00020                 {\cf19 break};\par
00021             \}\par
00022         \}\par
00023         {\cf19 if} (!entry) \{\par
00024             {\cf19 return} {\cf17 nullptr}; {\cf20 //no free page found}\par
00025         \}\par
00026         PageHeader* page = {\cf17 reinterpret_cast<}PageHeader*{\cf17 >}(entry);\par
00027         page->amoutofPages = 1;\par
00028         page->usable = entry + {\cf17 sizeof}(PageHeader);\par
00029         \par
00030         {\cf19 return} page;;\par
00031     \}\par
00032     {\cf18 bool} PhysicalAllocator::FreePage({\cf18 void}* ptr)\par
00033     \{\par
00034         {\cf19 if} (!ptr) {\cf19 return} {\cf17 false};\par
00035         {\cf18 void}* fullpage = {\cf17 reinterpret_cast<}{\cf18 void}*{\cf17 >}({\cf17 reinterpret_cast<}{\cf18 size_t}{\cf17 >}(ptr) - {\cf17 sizeof}(PageHeader));\par
00036 \par
00037         PageHeader* header = {\cf17 reinterpret_cast<}PageHeader*{\cf17 >}(fullpage);\par
00038         {\cf19 if} (header->usable != ptr){\cf19 return} {\cf17 false}; {\cf20 //not a valid pointer}\par
00039         {\cf18 size_t} pagenum = {\cf17 reinterpret_cast<}{\cf18 size_t}{\cf17 >}(fullpage) / EFI_PAGE_SIZE;\par
00040 \par
00041         {\cf17 auto}& globalMap = SYSTEM::SYSTEM_INFO::GlobalPageMap;\par
00042         {\cf19 if} (pagenum > globalMap.etries){\cf19 return} {\cf17 false};{\cf20 // somehow the adress is larger than max installed ram}\par
00043         {\cf17 auto}& Entry = globalMap.Entrys[pagenum];\par
00044         Entry.isFree = {\cf17 true};\par
00045         Entry.Type = PageType::Free;\par
00046         {\cf19 return} {\cf17 true};\par
00047     \}\par
00048 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CONSOLE.cpp\par \pard\plain 
{\tc\tcl2 \v SOURCE/SUBSYSTEMS/CONSOLE/CONSOLE.cpp}
{\xe \v SOURCE/SUBSYSTEMS/CONSOLE/CONSOLE.cpp}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "../../../HEADER/SUBSYSTEMS/CONSOLE/CONSOLE.h"}\par
00002 {\cf21 #include "../../../HEADER/SUBSYSTEMS/RENDER/RENDER.h"}\par
00003 {\cf21 #include <STRING_F.h>}\par
00004 {\cf17 namespace }SYSTEM \{\par
00005     {\cf17 namespace }SUBSYSTEMS \{\par
00006         {\cf17 namespace }CONSOLE \{\par
00007             {\cf17 class }__CONSOLE__STRUCTURE \{\par
00008             {\cf17 private}:\par
00009                 {\cf17 friend} {\cf18 bool} Console::InitConsole({\cf18 size_t} collums, {\cf18 size_t} rows, {\cf18 size_t} pixelsperRow, {\cf18 size_t} pixelsperCollum);\par
00010             {\cf17 public}:\par
00011                 __CONSOLE__STRUCTURE({\cf17 const} __CONSOLE__STRUCTURE& other) = {\cf17 delete};\par
00012                 __CONSOLE__STRUCTURE(__CONSOLE__STRUCTURE&& other) = {\cf17 delete};\par
00013                 __CONSOLE__STRUCTURE() = {\cf19 default};\par
00014                 __CONSOLE__STRUCTURE& operator=({\cf17 const} __CONSOLE__STRUCTURE& other) = {\cf17 delete};\par
00015                 __CONSOLE__STRUCTURE& operator=(__CONSOLE__STRUCTURE&& other) = {\cf17 delete};\par
00016                 {\cf18 char}* buffer={\cf17 nullptr};\par
00017                 {\cf18 size_t} bufferSize=0;\par
00018                 {\cf18 size_t} collums = 0;\par
00019                 {\cf18 size_t} rows = 0;\par
00020 \par
00021                 {\cf18 size_t} cursorPosRows = 0;\par
00022                 {\cf18 size_t} cursorPosCollums = 0;\par
00023 \par
00024                 {\cf18 size_t} pixelsPerRow = 0;\par
00025                 {\cf18 size_t} pixxelsPerCollum = 0;\par
00026             \};\par
00027             {\cf17 static} __CONSOLE__STRUCTURE& ConsoleStructure() \{\par
00028                 {\cf17 static} __CONSOLE__STRUCTURE str;\par
00029                 {\cf19 return} str;\par
00030             \}\par
00031 \par
00037             {\cf18 void} HandleContolChar({\cf18 wchar_t} chr) \{\par
00038                 __CONSOLE__STRUCTURE& console = ConsoleStructure();\par
00039 \par
00040                 {\cf19 switch} (chr) \{\par
00041                 {\cf19 case} {\cf23 '\\n'}: \{\par
00042                     console.cursorPosCollums = 0;\par
00043                     console.cursorPosRows++;\par
00044                     {\cf19 break};\par
00045                 \}\par
00046                 {\cf19 case} {\cf23 '\\t'}: \{\par
00047                     console.cursorPosCollums += 4;\par
00048                     {\cf19 break};\par
00049                 \}\par
00050                 {\cf19 case} {\cf23 ' '}: \{\par
00051                     {\cf20 //ill treat the space as a special char}\par
00052                     console.cursorPosCollums++;\par
00053                 \}\par
00054                 \}\par
00055             \}\par
00056             {\cf18 bool} isControlChar({\cf18 wchar_t} chr) \{\par
00057                 {\cf19 return} chr == {\cf23 '\\n'} || chr == {\cf23 '\\t'} || chr == {\cf23 ' '};\par
00058             \}\par
00059             {\cf18 bool} Console::InitConsole({\cf18 size_t} collums, {\cf18 size_t} rows, {\cf18 size_t} pixelsperRow, {\cf18 size_t} pixelsperCollum)\par
00060             \{\par
00061                 __CONSOLE__STRUCTURE& console = ConsoleStructure();\par
00062                 console.collums = collums;\par
00063                 console.pixelsPerRow = pixelsperRow;\par
00064                 console.pixxelsPerCollum = pixelsperCollum;\par
00065                 console.rows = rows;\par
00066                 {\cf19 return} {\cf17 true};\par
00067             \}\par
00068             {\cf18 void} Console::WriteLine({\cf17 const} {\cf18 wchar_t}* str)\par
00069             \{\par
00070                 __CONSOLE__STRUCTURE& console = ConsoleStructure();\par
00071                 {\cf18 size_t} x = console.pixxelsPerCollum * console.cursorPosCollums;\par
00072                 {\cf18 size_t} y = console.pixelsPerRow * console.cursorPosRows;\par
00073                 RENDER::SIMPLE::SimpleDrawString(str, ({\cf18 unsigned} {\cf18 int})x,({\cf18 unsigned} {\cf18 int}) y);\par
00074                 console.cursorPosRows++;\par
00075 \par
00076             \}\par
00077             {\cf18 void} Console::WriteF({\cf18 size_t} args,{\cf17 const} {\cf18 char}* format, ...)\par
00078             \{\par
00079             \}\par
00080             {\cf18 void} Console::Write({\cf17 const} {\cf18 wchar_t}* str)\par
00081             \{\par
00082                 __CONSOLE__STRUCTURE& console = ConsoleStructure();\par
00083             \par
00084                 {\cf18 size_t} len = STD::strlen(str);\par
00085                 {\cf19 for} ({\cf18 size_t} i = 0; i < len + 1; i++) \{\par
00086                     {\cf18 size_t} x = console.pixxelsPerCollum * console.cursorPosCollums;\par
00087                     {\cf18 size_t} y = console.pixelsPerRow * console.cursorPosRows;\par
00088                     {\cf19 if} (isControlChar(str[i])) \{\par
00089                         HandleContolChar(str[i]);\par
00090                     \}\par
00091                     {\cf19 else} \{\par
00092                         console.cursorPosCollums++;\par
00093                     \}\par
00094                     RENDER::SIMPLE::SimpleDrawChar(({\cf18 unsigned} {\cf18 int})x, ({\cf18 unsigned} {\cf18 int})y, str[i]);\par
00095 \par
00096                 \}\par
00097             \}\par
00098             ConsoleInfo QueryConsoleInfo()\par
00099             \{\par
00100                 {\cf19 return} ConsoleInfo();\par
00101             \}\par
00102             {\cf18 void} Console::ClearConsole()\par
00103             \{\par
00104             \}\par
00105             {\cf18 void} Console::Flush()\par
00106             \{\par
00107             \}\par
00108             {\cf18 bool} Console::ToggleANSICodes()\par
00109             \{\par
00110                 {\cf19 return} {\cf17 false};\par
00111             \}\par
00112         \}\par
00113     \}\par
00114 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RENDER.cpp\par \pard\plain 
{\tc\tcl2 \v SOURCE/SUBSYSTEMS/RENDER/RENDER.cpp}
{\xe \v SOURCE/SUBSYSTEMS/RENDER/RENDER.cpp}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "../../../HEADER/SUBSYSTEMS/RENDER/RENDER.h"}\par
00002 {\cf21 #include "../../../../FREESTANDING_STD++LIB/HEADER/STRING/STRING_F.h"}\par
00003 {\cf17 namespace }SYSTEM::SUBSYSTEMS::RENDER \{\par
00004     {\cf17 namespace }SIMPLE \{\par
00005 \par
00006         {\cf18 unsigned} {\cf18 int}* FramebufferBase = {\cf17 nullptr};\par
00007         {\cf18 unsigned} {\cf18 int} FramebufferWidth = 0;\par
00008         {\cf18 unsigned} {\cf18 int} FramebufferHeight = 0;\par
00009         {\cf18 unsigned} {\cf18 int} PixelsPerScanline = 0; {\cf20 // Number of bytes per row in the framebuffer}\par
00010         {\cf20 //i might chage the 8X8 bmp to be 16H and 8W}\par
00011         SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR SimpleFont[255] = \{\par
00012             \{\par
00013                  0, {\cf20 // Null character}\par
00014                 0, {\cf20 // No width}\par
00015                 8, {\cf20 // Height of the character}\par
00016                  0xFFFFFFFF, {\cf20 // White color}\par
00017                  \{0\}\par
00018 \par
00019 \par
00020             \},\par
00021             \{\par
00022                  {\cf23 'A'}, {\cf20 // Character 'A'}\par
00023                  8, {\cf20 // Width of the character}\par
00024                  16, {\cf20 // Height of the character}\par
00025                  0xFFFFFFFF, {\cf20 // White color}\par
00026             \{\par
00027                 0b01111110,\par
00028                 0b01000010,\par
00029                 0b01000010, {\cf20 // 0x18}\par
00030                 0b01000010, {\cf20 // 0x18}\par
00031                 0b01000010, {\cf20 // 0x24}\par
00032                 0b01000010, {\cf20 // 0x24}\par
00033                 0b01000010, {\cf20 // 0x3C}\par
00034                 0b01111110, {\cf20 // 0x3C}\par
00035                 0b01000010, {\cf20 // 0x42}\par
00036                 0b01000010, {\cf20 // 0x42}\par
00037                 0b01000010, {\cf20 // 0x42}\par
00038                 0b01000010, {\cf20 // 0x42}\par
00039                 0b01000010, {\cf20 // 0x42}\par
00040                 0b01000010, {\cf20 // 0x42}\par
00041                 0b01000010, {\cf20 // 0x00}\par
00042                 0b00000000{\cf20 // 0x00}\par
00043                 \}\par
00044             \},\par
00045             \{\par
00046                 {\cf23 'B'},\par
00047                 8,\par
00048                 16,\par
00049                 0xFFFFFFFF,\par
00050                 \{\par
00051                 0b00000000, {\cf20 // 0x00}\par
00052                 0b01111100, {\cf20 // 0x00}\par
00053                 0b01000010, {\cf20 // }\par
00054                 0b01000010, {\cf20 // }\par
00055                 0b01000010, {\cf20 // 0x42}\par
00056                 0b01000010, {\cf20 // 0x42}\par
00057                 0b01000010, {\cf20 // 0x42}\par
00058                 0b01111100, {\cf20 // 0x42}\par
00059                 0b01111100, {\cf20 // }\par
00060                 0b01000010, {\cf20 // }\par
00061                 0b01000010, {\cf20 // 0x42}\par
00062                 0b01000010, {\cf20 // 0x42}\par
00063                 0b01000010, {\cf20 // 0x3C}\par
00064                 0b01000010, {\cf20 // 0x3C}\par
00065                 0b01111100, {\cf20 // 0x00}\par
00066                 0b00000000 {\cf20 // 0x00}\par
00067                 \}\par
00068 \par
00069             \},\par
00070             \{\par
00071                 .c = {\cf23 'C'},\par
00072                 .width = 8,\par
00073                 .height = 16,\par
00074                 .Color = 0xFFFFFFFF,\par
00075                 .BMP = \{\par
00076                 0b00000000, {\cf20 // 0x00}\par
00077                 0b01111110, {\cf20 // 0x00}\par
00078                 0b01000000, {\cf20 // 0x3C}\par
00079                 0b01000000, {\cf20 // 0x3C}\par
00080                 0b01000000, {\cf20 // 0x42}\par
00081                 0b01000000, {\cf20 // 0x42}\par
00082                 0b01000000, {\cf20 // 0x40}\par
00083                 0b01000000, {\cf20 // 0x40}\par
00084                 0b01000000, {\cf20 // 0x40}\par
00085                 0b01000000, {\cf20 // 0x40}\par
00086                 0b01000000, {\cf20 // 0x42}\par
00087                 0b01000000, {\cf20 // 0x42}\par
00088                 0b01000000, {\cf20 // 0x3C}\par
00089                 0b01000000, {\cf20 // 0x3C}\par
00090                 0b01111110, {\cf20 // 0x00}\par
00091                 0b00000000 {\cf20 // 0x00}\par
00092                 \}\par
00093             \},\par
00094             \{\par
00095                 .c ={\cf23 'D'},\par
00096                 .width = 8,\par
00097                 .height = 16,\par
00098                 .Color = 0xFFFFFFFF,\par
00099                 .BMP = \{\par
00100                 0b00000000, {\cf20 // 0x00}\par
00101                 0b01111100, {\cf20 // 0x78}\par
00102                 0b01000010, {\cf20 // 0x44}\par
00103                 0b01000010, {\cf20 // 0x42}\par
00104                 0b01000010, {\cf20 // 0x42}\par
00105                 0b01000010, {\cf20 // 0x42}\par
00106                 0b01000010, {\cf20 // 0x42}\par
00107                 0b01000010, {\cf20 // 0x42}\par
00108                 0b01000010, {\cf20 // 0x42}\par
00109                 0b01000010, {\cf20 // 0x42}\par
00110                 0b01000010, {\cf20 // 0x42}\par
00111                 0b01000010, {\cf20 // 0x42}\par
00112                 0b01000010, {\cf20 // 0x42}\par
00113                 0b01000010, {\cf20 // 0x44}\par
00114                 0b01111100, {\cf20 // 0x78}\par
00115                 0b00000000 {\cf20 // 0x00}\par
00116                 \}\par
00117             \},\par
00118             \{\par
00119                 .c = {\cf23 'E'},\par
00120                 .width = 8,\par
00121                 .height = 16,\par
00122                 .Color = 0xFFFFFFFF,\par
00123                 .BMP = \{\par
00124                 0b00000000, {\cf20 // 0x00}\par
00125                 0b01111110, {\cf20 // 0x7E}\par
00126                 0b01000000, {\cf20 // 0x7E}\par
00127                 0b01000000, {\cf20 // 0x40}\par
00128                 0b01000000, {\cf20 // 0x40}\par
00129                 0b01000000, {\cf20 // 0x40}\par
00130                 0b01000000, {\cf20 // 0x40}\par
00131                 0b01111110, {\cf20 // 0x3C}\par
00132                 0b01111110, {\cf20 // 0x3C}\par
00133                 0b01000000, {\cf20 // 0x40}\par
00134                 0b01000000, {\cf20 // 0x40}\par
00135                 0b01000000, {\cf20 // 0x40}\par
00136                 0b01000000, {\cf20 // 0x40}\par
00137                 0b01000000, {\cf20 // 0x7E}\par
00138                 0b01111110, {\cf20 // 0x7E}\par
00139                 0b00000000 {\cf20 // 0x00}\par
00140                 \}\par
00141             \},\par
00142             \{\par
00143                 .c = {\cf23 'F'},\par
00144                 .width = 8,\par
00145                 .height = 16,\par
00146                 .Color = 0xFFFFFFFF,\par
00147                 .BMP = \{\par
00148                 0b00000000, {\cf20 // 0x00}\par
00149                 0b01111110, {\cf20 // 0x00}\par
00150                 0b01000000, {\cf20 // 0x7E}\par
00151                 0b01000000, {\cf20 // 0x7E}\par
00152                 0b01000000, {\cf20 // 0x40}\par
00153                 0b01000000, {\cf20 // 0x40}\par
00154                 0b01000000, {\cf20 // 0x40}\par
00155                 0b01111110, {\cf20 // 0x40}\par
00156                 0b01111110, {\cf20 // 0x3C}\par
00157                 0b01000000, {\cf20 // 0x3C}\par
00158                 0b01000000, {\cf20 // 0x40}\par
00159                 0b01000000, {\cf20 // 0x40}\par
00160                 0b01000000, {\cf20 // 0x40}\par
00161                 0b01000000, {\cf20 // 0x40}\par
00162                 0b00000000, {\cf20 // 0x00}\par
00163                 0b00000000 {\cf20 // 0x00}\par
00164                 \}\par
00165 \},\par
00166 \{\par
00167     .c = {\cf23 'G'},\par
00168     .width = 8,\par
00169         .height = 16,\par
00170         .Color = 0xFFFFFFFF,\par
00171         .BMP = \{\par
00172             0b00000000, {\cf20 // 0x00}\par
00173             0b01111110, {\cf20 // 0x00}\par
00174             0b01000010, {\cf20 // 0x3C}\par
00175             0b01000010, {\cf20 // 0x3C}\par
00176             0b01000010, {\cf20 // 0x42}\par
00177             0b01000000, {\cf20 // 0x42}\par
00178             0b01000000, {\cf20 // 0x40}\par
00179             0b01000000, {\cf20 // 0x40}\par
00180             0b01001110, {\cf20 // 0x4E}\par
00181             0b01001110, {\cf20 // 0x4E}\par
00182             0b01000010, {\cf20 // 0x42}\par
00183             0b01000010, {\cf20 // 0x42}\par
00184             0b01000010, {\cf20 // 0x3C}\par
00185             0b01000010, {\cf20 // 0x3C}\par
00186             0b01111110, {\cf20 // 0x00}\par
00187             0b00000000 {\cf20 // 0x00}\par
00188 \}\par
00189 \},\par
00190             \{\par
00191                 .c = {\cf23 'H'},\par
00192                 .width = 8,\par
00193                 .height = 16,\par
00194                 .Color = 0xFFFFFFFF,\par
00195                 .BMP = \{\par
00196                 0b00000000, {\cf20 // 0x00}\par
00197                 0b01000010, {\cf20 // 0x00}\par
00198                 0b01000010, {\cf20 // 0x42}\par
00199                 0b01000010, {\cf20 // 0x42}\par
00200                 0b01000010, {\cf20 // 0x42}\par
00201                 0b01000010, {\cf20 // 0x42}\par
00202                 0b01000010, {\cf20 // 0x7E}\par
00203                 0b01111110, {\cf20 // 0x7E}\par
00204                 0b01111110, {\cf20 // 0x42}\par
00205                 0b01000010, {\cf20 // 0x42}\par
00206                 0b01000010, {\cf20 // 0x42}\par
00207                 0b01000010, {\cf20 // 0x42}\par
00208                 0b01000010, {\cf20 // 0x00}\par
00209                 0b01000010, {\cf20 // 0x00}\par
00210                 0b01000010,{\cf20 // 0x00}\par
00211                 0b00000000 {\cf20 // 0x00}\par
00212                 \}\par
00213             \},\par
00214             \{\par
00215                 .c = {\cf23 'I'},\par
00216                 .width = 8,\par
00217                 .height = 16,\par
00218                 .Color = 0xFFFFFFFF,\par
00219                 .BMP = \{\par
00220                 0b00000000, {\cf20 // 0x00}\par
00221                 0b00111000, {\cf20 // 0x00}\par
00222                 0b00010000, {\cf20 // 0x3C}\par
00223                 0b00010000, {\cf20 // 0x3C}\par
00224                 0b00010000, {\cf20 // 0x18}\par
00225                 0b00010000, {\cf20 // 0x18}\par
00226                 0b00010000, {\cf20 // 0x18}\par
00227                 0b00010000, {\cf20 // 0x18}\par
00228                 0b00010000, {\cf20 // 0x3C}\par
00229                 0b00010000, {\cf20 // 0x3C}\par
00230                 0b00010000, {\cf20 // 0x18}\par
00231                 0b00010000, {\cf20 // 0x18}\par
00232                 0b00010000, {\cf20 // 0x3C}\par
00233                 0b00010000, {\cf20 // 0x3C}\par
00234                 0b00111000, {\cf20 // 0x00}\par
00235                 0b00000000 {\cf20 // 0x00}\par
00236                 \}\par
00237             \},\par
00238             \{\par
00239                 .c = {\cf23 'J'},\par
00240                 .width = 8,\par
00241                 .height = 16,\par
00242                 .Color = 0xFFFFFFFF,\par
00243                 .BMP = \{\par
00244                 0b00000000, {\cf20 // 0x00}\par
00245                 0b00000010, {\cf20 // 0x00}\par
00246                 0b00000010, {\cf20 // 0x0E}\par
00247                 0b00000010, {\cf20 // 0x0E}\par
00248                 0b00000010, {\cf20 // 0x04}\par
00249                 0b00000010, {\cf20 // 0x04}\par
00250                 0b00000010, {\cf20 // 0x04}\par
00251                 0b00000010, {\cf20 // 0x04}\par
00252                 0b00000010, {\cf20 // 0x44}\par
00253                 0b00000010, {\cf20 // 0x44}\par
00254                 0b01000010, {\cf20 // 0x44}\par
00255                 0b01000010, {\cf20 // 0x38}\par
00256                 0b01000010, {\cf20 // 0x44}\par
00257                 0b01000010, {\cf20 // 0x38}\par
00258                 0b00111100, {\cf20 // 0x00}\par
00259                 0b00000000 {\cf20 // 0x00}\par
00260                 \}\par
00261             \},\par
00262             \{\par
00263                 .c = {\cf23 'K'},\par
00264                 .width = 8,\par
00265                 .height = 16,\par
00266                 .Color = 0xFFFFFFFF,\par
00267                 .BMP = \{\par
00268                 0b00000000, {\cf20 // 0x00}\par
00269                 0b01000010, {\cf20 // 0x00}\par
00270                 0b01000010, {\cf20 // 0x42}\par
00271                 0b01000010, {\cf20 // 0x42}\par
00272                 0b01000010, {\cf20 // 0x44}\par
00273                 0b01000010, {\cf20 // 0x44}\par
00274                 0b01000010, {\cf20 // 0x58}\par
00275                 0b01111100, {\cf20 // 0x58}\par
00276                 0b01111100, {\cf20 // 0x70}\par
00277                 0b01000010, {\cf20 // 0x70}\par
00278                 0b01000010, {\cf20 // 0x44}\par
00279                 0b01000001, {\cf20 // 0x44}\par
00280                 0b01000001, {\cf20 // 0x42}\par
00281                 0b01000001, {\cf20 // 0x42}\par
00282                 0b01000001, {\cf20 // 0x00}\par
00283                 0b00000000 {\cf20 // 0x00}\par
00284                 \}\par
00285             \},\par
00286             \{\par
00287                 .c = {\cf23 'L'},\par
00288                 .width = 8,\par
00289                 .height = 16,\par
00290                 .Color = 0xFFFFFFFF,\par
00291                 .BMP = \{\par
00292                     0b00000000, {\cf20 // 0x00}\par
00293                     0b01000000, {\cf20 // 0x00}\par
00294                     0b01000000, {\cf20 // 0x40}\par
00295                     0b01000000, {\cf20 // 0x40}\par
00296                     0b01000000, {\cf20 // 0x40}\par
00297                     0b01000000, {\cf20 // 0x40}\par
00298                     0b01000000, {\cf20 // 0x40}\par
00299                     0b01000000, {\cf20 // 0x40}\par
00300                     0b01000000, {\cf20 // 0x40}\par
00301                     0b01000000, {\cf20 // 0x40}\par
00302                     0b01000000, {\cf20 // 0x40}\par
00303                     0b01000000, {\cf20 // 0x40}\par
00304                     0b01000000, {\cf20 // 0x7E}\par
00305                     0b01000000, {\cf20 // 0x7E}\par
00306                     0b01111110, {\cf20 // 0x00}\par
00307                     0b00000000 {\cf20 // 0x00}\par
00308                     \}\par
00309             \},\par
00310             \{\par
00311                 .c = {\cf23 'M'},\par
00312                 .width = 8,\par
00313                 .height = 16,\par
00314                 .Color = 0xFFFFFFFF,\par
00315                 .BMP = \{\par
00316                     0b00000000, {\cf20 // 0x00}\par
00317                     0b01000010, {\cf20 // 0x42}\par
00318                     0b01000010, {\cf20 // 0x42}\par
00319                     0b01100110, {\cf20 // 0x66}\par
00320                     0b01100110, {\cf20 // 0x66}\par
00321                     0b01011010, {\cf20 // 0x5A}\par
00322                     0b01011010, {\cf20 // 0x5A}\par
00323                     0b01000010, {\cf20 // 0x42}\par
00324                     0b01000010, {\cf20 // 0x42}\par
00325                     0b01000010, {\cf20 // 0x42}\par
00326                     0b01000010, {\cf20 // 0x42}\par
00327                     0b01000010, {\cf20 // 0x42}\par
00328                     0b01000010, {\cf20 // 0x42}\par
00329                     0b01000010, {\cf20 // 0x42}\par
00330                     0b01000010, {\cf20 // 0x42}\par
00331                     0b00000000 {\cf20 // 0x00}\par
00332                 \}\par
00333             \},\par
00334             \{\par
00335                 .c = {\cf23 'N'},\par
00336                 .width = 8,\par
00337                 .height = 16,\par
00338                 .Color = 0xFFFFFFFF,\par
00339                 .BMP = \{\par
00340                     0b00000000, {\cf20 // 0x00}\par
00341                     0b01000010, {\cf20 // 0x42}\par
00342                     0b01000010, {\cf20 // 0x42}\par
00343                     0b01000010, {\cf20 // 0x42}\par
00344                     0b01100010, {\cf20 // 0x66}\par
00345                     0b01100010, {\cf20 // 0x66}\par
00346                     0b01011010, {\cf20 // 0x5A}\par
00347                     0b01011010, {\cf20 // 0x5A}\par
00348                     0b01000110, {\cf20 // 0x44}\par
00349                     0b01000110, {\cf20 // 0x44}\par
00350                     0b01000010, {\cf20 // 0x42}\par
00351                     0b01000010, {\cf20 // 0x42}\par
00352                     0b01000010, {\cf20 // 0x42}\par
00353                     0b01000010, {\cf20 // 0x42}\par
00354                     0b01000010, {\cf20 // 0x42}\par
00355                     0b00000000 {\cf20 // 0x00}\par
00356                 \}\par
00357             \},\par
00358             \{\par
00359                 .c = {\cf23 'O'},\par
00360                 .width = 8,\par
00361                 .height = 16,\par
00362                 .Color = 0xFFFFFFFF,\par
00363                 .BMP = \{\par
00364                     0b00000000, {\cf20 // 0x00}\par
00365                     0b01111110, {\cf20 // 0x00}\par
00366                     0b01000010, {\cf20 // 0x3C}\par
00367                     0b01000010, {\cf20 // 0x3C}\par
00368                     0b01000010, {\cf20 // 0x42}\par
00369                     0b01000010, {\cf20 // 0x42}\par
00370                     0b01000010, {\cf20 // 0x42}\par
00371                     0b01000010, {\cf20 // 0x42}\par
00372                     0b01000010, {\cf20 // 0x42}\par
00373                     0b01000010, {\cf20 // 0x42}\par
00374                     0b01000010, {\cf20 // 0x3C}\par
00375                     0b01000010, {\cf20 // 0x3C}\par
00376                     0b01000010, {\cf20 // 0x00}\par
00377                     0b01000010, {\cf20 // 0x00}\par
00378                     0b01111110, {\cf20 // 0x00}\par
00379                     0b00000000 {\cf20 // 0x00}\par
00380                 \}\par
00381             \},\par
00382             \{\par
00383                 .c = {\cf23 'P'},\par
00384                 .width = 8,\par
00385                 .height = 16,\par
00386                 .Color = 0xFFFFFF,\par
00387                 .BMP = \{\par
00388                     0b00000000, {\cf20 // 0x00}\par
00389                     0b01111100, {\cf20 // 0x00}\par
00390                     0b01000010, {\cf20 // 0x3C}\par
00391                     0b01000010, {\cf20 // 0x3C}\par
00392                     0b01000010, {\cf20 // 0x42}\par
00393                     0b01000010, {\cf20 // 0x42}\par
00394                     0b01000010, {\cf20 // 0x42}\par
00395                     0b01111100, {\cf20 // 0x42}\par
00396                     0b01111100, {\cf20 // 0x3C}\par
00397                     0b01000000, {\cf20 // 0x3C}\par
00398                     0b01000000, {\cf20 // 0x40}\par
00399                     0b01000000, {\cf20 // 0x40}\par
00400                     0b01000000, {\cf20 // 0x40}\par
00401                     0b01000000, {\cf20 // 0x40}\par
00402                     0b01000000, {\cf20 // 0x00}\par
00403                     0b00000000 \par
00404                 \}\par
00405             \},\par
00406             \{\par
00407                 .c = {\cf23 'Q'},\par
00408                 .width = 8,\par
00409                 .height = 16,\par
00410                 .Color = 0xFFFFFFFF,\par
00411                 .BMP = \{\par
00412                     0b00000000,  {\cf20 // 0x00}\par
00413                     0b01111110,  {\cf20 // 0x00}\par
00414                     0b01000010,  {\cf20 // 0x3C}\par
00415                     0b01000010,  {\cf20 // 0x3C}\par
00416                     0b01000010,  {\cf20 // 0x42}\par
00417                     0b01000010,  {\cf20 // 0x42}\par
00418                     0b01000010,  {\cf20 // 0x42}\par
00419                     0b01000010,  {\cf20 // 0x42}\par
00420                     0b01000010,  {\cf20 // 0x4E}\par
00421                     0b01000010,  {\cf20 // 0x4E}\par
00422                     0b01000010,  {\cf20 // 0x42}\par
00423                     0b01001010,  {\cf20 // 0x42}\par
00424                     0b01001010,  {\cf20 // 0x3C}\par
00425                     0b01001010,  {\cf20 // 0x3C}\par
00426                     0b01111110,  {\cf20 // 0x00}\par
00427                     0b00000000 {\cf20 // 0x00}\par
00428                 \}\par
00429             \},\par
00430             \{\par
00431                 .c = {\cf23 'R'},\par
00432                 .width = 8,\par
00433                 .height = 16,\par
00434                 .Color = 0xFFFFFFFF,\par
00435                 .BMP = \{\par
00436                     0b00000000, {\cf20 // 0x00}\par
00437                     0b01111100, {\cf20 // 0x00}\par
00438                     0b01000010, {\cf20 // 0x3C}\par
00439                     0b01000010, {\cf20 // 0x3C}\par
00440                     0b01000010, {\cf20 // 0x42}\par
00441                     0b01000010, {\cf20 // 0x42}\par
00442                     0b01000010, {\cf20 // 0x42}\par
00443                     0b01111100, {\cf20 // 0x42}\par
00444                     0b01111100, {\cf20 // 0x3C}\par
00445                     0b01000010, {\cf20 // 0x3C}\par
00446                     0b01000010, {\cf20 // 0x44}\par
00447                     0b01000010, {\cf20 // 0x44}\par
00448                     0b01000010, {\cf20 // 0x42}\par
00449                     0b01000010, {\cf20 // 0x42}\par
00450                     0b01000000, {\cf20 // 0x00}\par
00451                     0b00000000 {\cf20 // 0x00}\par
00452                 \}\par
00453             \},\par
00454             \{\par
00455                 .c = {\cf23 'S'},\par
00456                 .width = 8,\par
00457                 .height = 16,\par
00458                 .Color = 0xFFFFFFFF,\par
00459                 .BMP = \{\par
00460                     0b00000000, {\cf20 // 0x00}\par
00461                     0b00111100, {\cf20 // 0x3C}\par
00462                     0b01000010, {\cf20 // 0x3C}\par
00463                     0b01000010, {\cf20 // 0x42}\par
00464                     0b01000000, {\cf20 // 0x42}\par
00465                     0b01000000, {\cf20 // 0x42}\par
00466                     0b01000000, {\cf20 // 0x3C}\par
00467                     0b00111100, {\cf20 // 0x3C}\par
00468                     0b00111100, {\cf20 // 0x1E}\par
00469                     0b00000010, {\cf20 // 0x1E}\par
00470                     0b00000010, {\cf20 // 0x42}\par
00471                     0b00000010, {\cf20 // 0x42}\par
00472                     0b01000010, {\cf20 // 0x3C}\par
00473                     0b01000010, {\cf20 // 0x3C}\par
00474                     0b00111100, {\cf20 // 0x00}\par
00475                     0b00000000 {\cf20 // 0x00}\par
00476                 \}\par
00477             \},\par
00478             \{\par
00479                 .c = {\cf23 'T'},\par
00480                 .width = 8,\par
00481                 .height = 16,\par
00482                 .Color = 0xFFFFFFFF,\par
00483                 .BMP = \{\par
00484                     0b00000000, {\cf20 // 0x00}\par
00485                     0b01111110, {\cf20 // 0x7E}\par
00486                     0b00010000, {\cf20 // 0x18}\par
00487                     0b00010000, {\cf20 // 0x18}\par
00488                     0b00010000, {\cf20 // 0x18}\par
00489                     0b00010000, {\cf20 // 0x18}\par
00490                     0b00010000, {\cf20 // 0x18}\par
00491                     0b00010000, {\cf20 // 0x18}\par
00492                     0b00010000, {\cf20 // 0x18}\par
00493                     0b00010000, {\cf20 // 0x18}\par
00494                     0b00010000, {\cf20 // 0x18}\par
00495                     0b00010000, {\cf20 // 0x18}\par
00496                     0b00010000, {\cf20 // 0x18}\par
00497                     0b00010000, {\cf20 // 0x18}\par
00498                     0b00010000, {\cf20 // 0x18}\par
00499                     0b00000000 {\cf20 // 0x00}\par
00500                      \}\par
00501             \},\par
00502             \{\par
00503                 .c = {\cf23 'U'},\par
00504                 .width = 8,\par
00505                 .height = 16,\par
00506                 .Color = 0xFFFFFFFF,\par
00507                 .BMP = \{\par
00508                     0b00000000, {\cf20 // 0x00}\par
00509                     0b01000010, {\cf20 // 0x42}\par
00510                     0b01000010, {\cf20 // 0x42}\par
00511                     0b01000010, {\cf20 // 0x42}\par
00512                     0b01000010, {\cf20 // 0x42}\par
00513                     0b01000010, {\cf20 // 0x42}\par
00514                     0b01000010, {\cf20 // 0x42}\par
00515                     0b01000010, {\cf20 // 0x42}\par
00516                     0b01000010, {\cf20 // 0x42}\par
00517                     0b01000010, {\cf20 // 0x42}\par
00518                     0b01000010, {\cf20 // 0x42}\par
00519                     0b01000010, {\cf20 // 0x42}\par
00520                     0b01000010, {\cf20 // 0x42}\par
00521                     0b01000010, {\cf20 // 0x42}\par
00522                     0b00111100, {\cf20 // 0x3C}\par
00523                     0b00000000 {\cf20 // 0x00}\par
00524                     \}\par
00525             \},\par
00526             \{\par
00527 .c = {\cf23 'V'},\par
00528                 .width = 8,\par
00529                 .height = 16,\par
00530                 .Color = 0xFFFFFFFF,\par
00531                 .BMP = \{\par
00532                     0b00000000, {\cf20 // 0x00}\par
00533                     0b00000000, {\cf20 // 0x00}\par
00534                     0b01000010, {\cf20 // 0x42}\par
00535                     0b01000010, {\cf20 // 0x42}\par
00536                     0b01000010, {\cf20 // 0x42}\par
00537                     0b01000010, {\cf20 // 0x42}\par
00538                     0b01000010, {\cf20 // 0x42}\par
00539                     0b01000010, {\cf20 // 0x42}\par
00540                     0b00100100, {\cf20 // 0x24}\par
00541                     0b00100100, {\cf20 // 0x24}\par
00542                     0b00011000, {\cf20 // 0x18}\par
00543                     0b00011000, {\cf20 // 0x18}\par
00544                     0b00011000, {\cf20 // 0x18}\par
00545                     0b00011000, {\cf20 // 0x18}\par
00546                     0b00000000, {\cf20 // 0x00}\par
00547                     0b00000000 {\cf20 // 0x00}\par
00548                 \}\par
00549             \},\par
00550             \{\par
00551                 .c = {\cf23 'W'},\par
00552                 .width = 8,\par
00553                 .height = 16,\par
00554                 .Color = 0xFFFFFFFF,\par
00555                 .BMP = \{\par
00556                     0b00000000,\par
00557                     0b01000010, {\cf20 // 0x42}\par
00558                     0b01000010, {\cf20 // 0x42}\par
00559                     0b01000010, {\cf20 // 0x42}\par
00560                     0b01000010, {\cf20 // 0x42}\par
00561                     0b01000010, {\cf20 // 0x42}\par
00562                     0b01000010, {\cf20 // 0x42}\par
00563                     0b01000010, {\cf20 // 0x42}\par
00564                     0b01011010, {\cf20 // 0x5A}\par
00565                     0b01011010, {\cf20 // 0x5A}\par
00566                     0b01011010, {\cf20 // 0x5A}\par
00567                     0b01011010, {\cf20 // 0x5A}\par
00568                     0b01011010, {\cf20 // 0x5A}\par
00569                     0b01100110, {\cf20 // 0x66}\par
00570                     0b01100110, {\cf20 // 0x66}\par
00571                     0b00000000 {\cf20 // 0x00}\par
00572                 \}\par
00573             \},\par
00574             \{\par
00575                 .c = {\cf23 'X'},\par
00576                 .width = 8,\par
00577                 .height = 16,\par
00578                 .Color = 0xFFFFFFFF,\par
00579                 .BMP = \{\par
00580                     0b00000000, {\cf20 // 0x00}\par
00581                     0b01000010, {\cf20 // 0x42}\par
00582                     0b01000010, {\cf20 // 0x42}\par
00583                     0b01000010, {\cf20 // 0x42}\par
00584                     0b00100100, {\cf20 // 0x24}\par
00585                     0b00100100, {\cf20 // 0x24}\par
00586                     0b00011000, {\cf20 // 0x18}\par
00587                     0b00011000, {\cf20 // 0x18}\par
00588                     0b00100100, {\cf20 // 0x24}\par
00589                     0b00100100, {\cf20 // 0x24}\par
00590                     0b01000010, {\cf20 // 0x42}\par
00591                     0b01000010, {\cf20 // 0x42}\par
00592                     0b01000010, {\cf20 // 0x42}\par
00593                     0b01000010, {\cf20 // 0x42}\par
00594                     0b00000000 {\cf20 // 0x00}\par
00595                     \}\par
00596             \},\par
00597             \{\par
00598                 .c = {\cf23 'Y'},\par
00599                 .width = 8,\par
00600                 .height = 16,\par
00601                 .Color = 0xFFFFFFFF,\par
00602                 .BMP = \{\par
00603                     0b00000000, {\cf20 // 0x00}\par
00604                     0b00000000, {\cf20 // 0x00}\par
00605                     0b01000010, {\cf20 // 0x42}\par
00606                     0b01000010, {\cf20 // 0x42}\par
00607                     0b00100100, {\cf20 // 0x24}\par
00608                     0b00100100, {\cf20 // 0x24}\par
00609                     0b00011000, {\cf20 // 0x18}\par
00610                     0b00011000, {\cf20 // 0x18}\par
00611                     0b00011000, {\cf20 // 0x18}\par
00612                     0b00011000, {\cf20 // 0x18}\par
00613                     0b00011000, {\cf20 // 0x18}\par
00614                     0b00011000, {\cf20 // 0x18}\par
00615                     0b00011000, {\cf20 // 0x18}\par
00616                     0b00011000, {\cf20 // 0x18}\par
00617                     0b00000000, {\cf20 // 0x00}\par
00618                     0b00000000 {\cf20 // 0x00}\par
00619                     \}\par
00620             \},\par
00621             \{\par
00622                 .c = {\cf23 'Z'},\par
00623                 .width = 8,\par
00624                 .height = 16,\par
00625                 .Color = 0xFFFFFFFF,\par
00626                 .BMP = \{\par
00627                     0b00000000, {\cf20 // 0x00}\par
00628                     0b00000000, {\cf20 // 0x00}\par
00629                     0b01111110, {\cf20 // 0x7E}\par
00630                     0b01111110, {\cf20 // 0x7E}\par
00631                     0b00000100, {\cf20 // 0x04}\par
00632                     0b00000100, {\cf20 // 0x04}\par
00633                     0b00001000, {\cf20 // 0x08}\par
00634                     0b00001000, {\cf20 // 0x08}\par
00635                     0b00010000, {\cf20 // 0x10}\par
00636                     0b00010000, {\cf20 // 0x10}\par
00637                     0b00100000, {\cf20 // 0x20}\par
00638                     0b00100000, {\cf20 // 0x20}\par
00639                     0b01111110, {\cf20 // 0x7E}\par
00640                     0b01111110, {\cf20 // 0x7E}\par
00641                     0b00000000, {\cf20 // 0x00}\par
00642                     0b00000000 {\cf20 // 0x00}\par
00643                 \}\par
00644             \},\par
00645             \{\par
00646                 .c = {\cf23 'a'},\par
00647                 .width =8,\par
00648                 .height=16,\par
00649                 .Color = 0xFFFFFFFF,\par
00650                 .BMP = \{\par
00651                     0b00000000,\par
00652                     0b0,\par
00653                     0b0,\par
00654                     0b0,\par
00655                     0b0,\par
00656                     0b0,\par
00657                     0b0,\par
00658                     0b01111110,\par
00659                     0b00000010,\par
00660                     0b00000010,\par
00661                     0b01111110,\par
00662                     0b01000010,\par
00663                     0b01000010,\par
00664                     0b01111110,\par
00665                     0b00000000\par
00666 \par
00667 \}\par
00668             \},\par
00669             \{\par
00670                 .c={\cf23 'b'},\par
00671                 .width = 8,\par
00672                 .height=16,\par
00673                 .Color =0xFFFFFFFF,\par
00674                 .BMP = \{\par
00675                     0b00000000,\par
00676                     0b01000000,\par
00677                     0b01000000,\par
00678                     0b01000000,\par
00679                     0b01000000,\par
00680                     0b01000000,\par
00681                     0b01000000,\par
00682                     0b01000000,\par
00683                     0b01111100,\par
00684                     0b01000010,\par
00685                     0b01000010,\par
00686                     0b01000010,\par
00687                     0b01000010,\par
00688                     0b01000010,\par
00689                     0b01111100,\par
00690                     0b00000000\par
00691 \}\par
00692             \},\par
00693             \{\par
00694                 .c={\cf23 'c'},\par
00695                 .width=8,\par
00696                 .height=16,\par
00697                 .Color=COLOURS::White,\par
00698                 .BMP = \{\par
00699                     0b00000000,\par
00700                     0b0,\par
00701                     0b0,\par
00702                     0b0,\par
00703                     0b0,\par
00704                     0b0,\par
00705                     0b0,\par
00706                     0b0,\par
00707                     0b00111110,\par
00708                     0b01000000,\par
00709                     0b01000000,\par
00710                     0b01000000,\par
00711                     0b01000000,\par
00712                     0b01000000,\par
00713                     0b00111110,\par
00714                     0b00000000\par
00715 \}\par
00716             \},\par
00717             \{\par
00718                 .c={\cf23 'd'},\par
00719                 .width=8,\par
00720                 .height=16,\par
00721                 .Color=COLOURS::White,\par
00722                 .BMP = \{\par
00723                     0b00000000,\par
00724                     0b00000010,\par
00725                     0b00000010,\par
00726                     0b00000010,\par
00727                     0b00000010,\par
00728                     0b00000010,\par
00729                     0b00000010,\par
00730                     0b00000010,\par
00731                     0b00111110,\par
00732                     0b01000010,\par
00733                     0b01000010,\par
00734                     0b01000010,\par
00735                     0b01000010,\par
00736                     0b01000010,\par
00737                     0b00111100,\par
00738                     0b00000000\par
00739 \}\par
00740             \},\par
00741             \{\par
00742                 .c={\cf23 'e'},\par
00743                 .width=8,\par
00744                 .height=16,\par
00745                 .Color=COLOURS::White,\par
00746                 .BMP = \{\par
00747                     0b00000000,\par
00748                     0b0,\par
00749                     0b0,\par
00750                     0b0,\par
00751                     0b0,\par
00752                     0b0,\par
00753                     0b00111100,\par
00754                     0b01000010,\par
00755                     0b01000010,\par
00756                     0b01111110,\par
00757                     0b01000000,\par
00758                     0b01000000,\par
00759                     0b01000000,\par
00760                     0b01000000,\par
00761                     0b00111110,\par
00762                     0b00000000\par
00763 \}\par
00764             \},\par
00765             \{\par
00766                 .c={\cf23 'f'},\par
00767                 .width=8,\par
00768                 .height=16,\par
00769                 .Color=COLOURS::White,\par
00770                 .BMP = \{\par
00771                     0b00000000,\par
00772                     0b00001110,\par
00773                     0b00010000,\par
00774                     0b00010000,\par
00775                     0b00010000,\par
00776                     0b00010000,\par
00777                     0b00010000,\par
00778                     0b00010000,\par
00779                     0b00111000,\par
00780                     0b00010000,\par
00781                     0b00010000,\par
00782                     0b00010000,\par
00783                     0b00010000,\par
00784                     0b00010000,\par
00785                     0b00010000,\par
00786                     0b00000000\par
00787 \par
00788 \}\par
00789             \},\par
00790             \{\par
00791                 .c={\cf23 'g'},\par
00792                 .width=8,\par
00793                 .height=16,\par
00794                 .Color=COLOURS::White,\par
00795                 .BMP = \{\par
00796                     0b00000000,\par
00797                     0b0,\par
00798                     0b0,\par
00799                     0b0,\par
00800                     0b0,\par
00801                     0b0,\par
00802                     0b01111110,\par
00803                     0b01000010,\par
00804                     0b01000010,\par
00805                     0b01000010,\par
00806                     0b01111110,\par
00807                     0b00000010,\par
00808                     0b00000010,\par
00809                     0b00000010,\par
00810                     0b01111110,\par
00811                     0b00000000\par
00812 \}\par
00813             \},\par
00814             \{\par
00815                 .c={\cf23 'h'},\par
00816                 .width=8,\par
00817                 .height=16,\par
00818                 .Color=COLOURS::White,\par
00819                 .BMP = \{\par
00820                     0b00000000,\par
00821                     0b01000000,\par
00822                     0b01000000,\par
00823                     0b01000000,\par
00824                     0b01000000,\par
00825                     0b01000000,\par
00826                     0b01000000,\par
00827                     0b01000000,\par
00828                     0b01000000,\par
00829                     0b01111110,\par
00830                     0b01000010,\par
00831                     0b01000010,\par
00832                     0b01000010,\par
00833                     0b01000010,\par
00834                     0b01000010,\par
00835                     0b00000000\par
00836 \}\par
00837             \},\par
00838             \{\par
00839                 .c={\cf23 'i'},\par
00840                 .width=8,\par
00841                 .height=16,\par
00842                 .Color=COLOURS::White,\par
00843                 .BMP = \{\par
00844                     0b00000000,\par
00845                     0b00000000,\par
00846                     0b00001000,\par
00847                     0b00001000,\par
00848                     0b00000000,\par
00849                     0b00000000,\par
00850                     0b00001000,\par
00851                     0b00001000,\par
00852                     0b00001000,\par
00853                     0b00001000,\par
00854                     0b00001000,\par
00855                     0b00001000,\par
00856                     0b00001000,\par
00857                     0b00001000,\par
00858                     0b00001000,\par
00859                     0b00000000\par
00860 \}\par
00861             \},\par
00862             \{\par
00863                 .c={\cf23 'j'},\par
00864                 .width=8,\par
00865                 .height=16,\par
00866                 .Color = COLOURS::White,\par
00867                 .BMP = \{\par
00868                     0b00000000,\par
00869                     0b00000000,\par
00870                     0b00001000,\par
00871                     0b00001000,\par
00872                     0b00000000,\par
00873                     0b00001000,\par
00874                     0b00001000,\par
00875                     0b00001000,\par
00876                     0b00001000,\par
00877                     0b00001000,\par
00878                     0b00001000,\par
00879                     0b00001000,\par
00880                     0b00001000,\par
00881                     0b00001000,\par
00882                     0b01110000,\par
00883                     0b00000000\par
00884 \}\par
00885             \}, \{\par
00886 \par
00887                 .c ={\cf23 'k'},\par
00888                 .width=8,\par
00889                 .height=16,\par
00890                 .Color=COLOURS::White,\par
00891                 .BMP = \{\par
00892                     0b00000000,\par
00893                     0b01000000,\par
00894                     0b01000000,\par
00895                     0b01000000,\par
00896                     0b01000000,\par
00897                     0b01000000,\par
00898                     0b01000010,\par
00899                     0b01000010,\par
00900                     0b01000010,\par
00901                     0b01000100,\par
00902                     0b01111000,\par
00903                     0b01000100,\par
00904                     0b01000010,\par
00905                     0b01000010,\par
00906                     0b01000010,\par
00907                     0b00000000\par
00908 \}\par
00909             \},\par
00910             \{\par
00911                 .c={\cf23 'l'},\par
00912                 .width=8,\par
00913                 .height=16,\par
00914                 .Color=COLOURS::White,\par
00915                 .BMP = \{\par
00916                     0b00000000,\par
00917                     0b00001000,\par
00918                     0b00001000,\par
00919                     0b00001000,\par
00920                     0b00001000,\par
00921                     0b00001000,\par
00922                     0b00001000,\par
00923                     0b00001000,\par
00924                     0b00001000,\par
00925                     0b00001000,\par
00926                     0b00001000,\par
00927                     0b00001000,\par
00928                     0b00001000,\par
00929                     0b00001000,\par
00930                     0b00000110,\par
00931                     0b00000000\par
00932 \}\par
00933             \},\par
00934             \{\par
00935                 .c ={\cf23 'm'},\par
00936                 .width=8,\par
00937                 .height=16,\par
00938                 .Color=COLOURS::White,\par
00939                 .BMP = \{\par
00940                     0b00000000,\par
00941                     0b00000000,\par
00942                     0b00000000,\par
00943                     0b00000000,\par
00944                     0b00000000,\par
00945                     0b00000000,\par
00946                     0b00110100,\par
00947                     0b01001010,\par
00948                     0b01001010,\par
00949                     0b01001010,\par
00950                     0b01001010,\par
00951                     0b01001010,\par
00952                     0b01001010,\par
00953                     0b01001010,\par
00954                     0b01001010,\par
00955                     0b00000000\par
00956 \}\par
00957             \},\par
00958             \{\par
00959                 .c={\cf23 'n'},\par
00960                 .width=8,\par
00961                 .height=16,\par
00962                 .Color=COLOURS::White,\par
00963                 .BMP = \{\par
00964                     0b0,\par
00965                     0b0,\par
00966                     0b0,\par
00967                     0b0,\par
00968                     0b0,\par
00969                     0b0,\par
00970                     0b0,\par
00971                     0b0,\par
00972                     0b01111100,\par
00973                     0b01000010,\par
00974                     0b01000010,\par
00975                     0b01000010,\par
00976                     0b01000010,\par
00977                     0b01000010,\par
00978                     0b01000010,\par
00979                     0b00000000\par
00980 \}\par
00981             \},\par
00982             \{\par
00983                 .c={\cf23 'o'},\par
00984                 .width=8,\par
00985                 .height=16,\par
00986                 .Color=COLOURS::White,\par
00987                 .BMP = \{\par
00988                     0b0,\par
00989                     0b0,\par
00990                     0b0,\par
00991                     0b0,\par
00992                     0b0,\par
00993                     0b0,\par
00994                     0b0,\par
00995                     0b0,\par
00996                     0b0,\par
00997                     0b00111100,\par
00998                     0b01000010,\par
00999                     0b01000010,\par
01000                     0b01000010,\par
01001                     0b01000010,\par
01002                     0b00111100,\par
01003                     0b00000000\par
01004 \}\par
01005             \}\par
01006 \par
01007 \par
01008         \};\par
01009 \par
01010 \par
01011         {\cf18 int} TranslationTable[256] = \{ \par
01012             0,          {\cf20 //\\0}\par
01013             -1,         {\cf20 //}\par
01014             -1,         {\cf20 //}\par
01015             -1,         {\cf20 //}\par
01016             -1,         {\cf20 //}\par
01017             -1,         {\cf20 //}\par
01018             -1,         {\cf20 //}\par
01019             -1,         {\cf20 //}\par
01020             -1,         {\cf20 //}\par
01021             -1,         {\cf20 //}\par
01022             -1,         {\cf20 //}\par
01023             -1,         {\cf20 //}\par
01024             -1,         {\cf20 //}\par
01025             -1,         {\cf20 //}\par
01026             -1,         {\cf20 //}\par
01027             -1,         {\cf20 //}\par
01028             -1,         {\cf20 //}\par
01029             -1,         {\cf20 //}\par
01030             -1,         {\cf20 //}\par
01031             -1,         {\cf20 //}\par
01032             -1,         {\cf20 //}\par
01033             -1,         {\cf20 //}\par
01034             -1,         {\cf20 //}\par
01035             -1,         {\cf20 //}\par
01036             -1,         {\cf20 //}\par
01037             -1,         {\cf20 //}\par
01038             -1,         {\cf20 //}\par
01039             -1,         {\cf20 //}\par
01040             -1,         {\cf20 //}\par
01041             -1,         {\cf20 //}\par
01042             -1,         {\cf20 //}\par
01043             -1,         {\cf20 //}\par
01044             -1,         {\cf20 //}\par
01045             -1,         {\cf20 //}\par
01046             -1,         {\cf20 //}\par
01047             -1,         {\cf20 //}\par
01048             -1,         {\cf20 //}\par
01049             -1,         {\cf20 //}\par
01050             -1,         {\cf20 //}\par
01051             -1,         {\cf20 //}\par
01052             -1,         {\cf20 //}\par
01053             -1,         {\cf20 //}\par
01054             -1,         {\cf20 //}\par
01055             -1,         {\cf20 //}\par
01056             -1,         {\cf20 //}\par
01057             -1,         {\cf20 //}\par
01058             -1,         {\cf20 //}\par
01059             -1,         {\cf20 //}\par
01060             -1,         {\cf20 //}\par
01061             -1,         {\cf20 //}\par
01062             -1,         {\cf20 //}\par
01063             -1,         {\cf20 //}\par
01064             -1,         {\cf20 //}\par
01065             -1,         {\cf20 //}\par
01066             -1,         {\cf20 //}\par
01067             -1,         {\cf20 //}\par
01068             -1,         {\cf20 //}\par
01069             -1,         {\cf20 //}\par
01070             -1,         {\cf20 //}\par
01071             -1,         {\cf20 //}\par
01072             -1,         {\cf20 //}\par
01073             -1,         {\cf20 //}\par
01074             -1,         {\cf20 //}\par
01075             -1,         {\cf20 //}\par
01076             -1,         {\cf20 //}\par
01077             1,          {\cf20 //A}\par
01078             2,          {\cf20 //B}\par
01079             3,          {\cf20 //C}\par
01080             4,          {\cf20 //D}\par
01081             5,          {\cf20 //E}\par
01082             6,          {\cf20 //F}\par
01083             7,          {\cf20 //G}\par
01084             8,          {\cf20 //H}\par
01085             9,          {\cf20 //I}\par
01086             10,         {\cf20 //J}\par
01087             11,         {\cf20 //K}\par
01088             12,         {\cf20 //K}\par
01089             13,         {\cf20 //M}\par
01090             14,         {\cf20 //N}\par
01091             15,         {\cf20 //O}\par
01092             16,         {\cf20 //P}\par
01093             17,         {\cf20 //Q}\par
01094             18,         {\cf20 //R}\par
01095             19,         {\cf20 //S}\par
01096             20,         {\cf20 //T}\par
01097             21,         {\cf20 //U}\par
01098             22,         {\cf20 //V}\par
01099             23,         {\cf20 //W}\par
01100             24,         {\cf20 //X}\par
01101             25,         {\cf20 //Y}\par
01102             26,         {\cf20 //Z}\par
01103             -1,         {\cf20 //}\par
01104             -1,         {\cf20 //}\par
01105             -1,         {\cf20 //}\par
01106             -1,         {\cf20 //}\par
01107             -1,         {\cf20 //}\par
01108             -1,         {\cf20 //}\par
01109             27,         {\cf20 //a}\par
01110             28,         {\cf20 //b}\par
01111             29,         {\cf20 //c}\par
01112             30,         {\cf20 //d}\par
01113             31,         {\cf20 //e}\par
01114             32,         {\cf20 //f}\par
01115             33,         {\cf20 //g}\par
01116             34,         {\cf20 //h }\par
01117             35,         {\cf20 //i}\par
01118             36,         {\cf20 //j}\par
01119             37,         {\cf20 //k}\par
01120             38,         {\cf20 //l}\par
01121             39,         {\cf20 //m}\par
01122             40,         {\cf20 //n}\par
01123             41\par
01124         \};\par
01125         {\cf18 void} SimpleDrawChar({\cf18 unsigned} {\cf18 int} x, {\cf18 unsigned} {\cf18 int} y, {\cf18 wchar_t} c)\par
01126         \{\par
01127             {\cf20 //find char in translation table}\par
01128             {\cf18 int} index = TranslationTable[({\cf18 unsigned} char)c];\par
01129             {\cf19 if} (index < 0 || index >= 255) {\cf19 return} SimpleDrawChar(x,y,{\cf23 'A'}); {\cf20 // Invalid character index}\par
01130             {\cf17 const} SYSTEM::SUBSYSTEMS::RENDER::SIMPLE::CHAR& character = SimpleFont[index];\par
01131             {\cf20 // Draw the character bitmap to the framebuffer}\par
01132             {\cf19 for} ({\cf18 unsigned} {\cf18 int} row = 0; row < character.height; ++row) \{\par
01133                 {\cf19 for} ({\cf18 unsigned} {\cf18 int} col = 0; col < character.width; ++col) \{\par
01134                     {\cf19 if} (character.BMP[row] & (1 << (character.width - 1 - col))) \{ {\cf20 // Check if the bit is set}\par
01135                         {\cf18 unsigned} {\cf18 int} pixelX = x + col;\par
01136                         {\cf18 unsigned} {\cf18 int} pixelY = y + row;\par
01137                         {\cf19 if} (pixelX < FramebufferWidth && pixelY < FramebufferHeight) \{ {\cf20 // Ensure within bounds}\par
01138                             FramebufferBase[pixelY * PixelsPerScanline + pixelX] = character.Color; {\cf20 // Set pixel color}\par
01139                         \}\par
01140                     \}\par
01141                 \}\par
01142             \}\par
01143 \par
01144         \}\par
01145         {\cf18 void} SimpleDrawString({\cf17 const} {\cf18 wchar_t}* str, {\cf18 unsigned} {\cf18 int} x, {\cf18 unsigned} {\cf18 int} y)\par
01146         \{\par
01147             {\cf18 size_t} len = STD::strlen(str);\par
01148             {\cf18 unsigned} {\cf18 int} xpos = x;\par
01149             {\cf18 unsigned} {\cf18 int} ypos = y;\par
01150             {\cf19 for} ({\cf18 size_t} i = 0; i < len; i++) \{\par
01151                 {\cf19 if}(str[i]=={\cf23 ' '})\{\par
01152                     xpos += 10;\par
01153 \par
01154 \par
01155                     {\cf19 continue};\par
01156                 \}\par
01157                 SimpleDrawChar(xpos,ypos,str[i]);\par
01158                 xpos += 10;\par
01159 \par
01160             \}\par
01161         \}\par
01162     \}\par
01163 \}\par
01164 \par
01165 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SYSTEM_INFO.cpp\par \pard\plain 
{\tc\tcl2 \v SOURCE/SYSTEM_INFO/SYSTEM_INFO.cpp}
{\xe \v SOURCE/SYSTEM_INFO/SYSTEM_INFO.cpp}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "../../HEADER/SYTEM_INFO/SYSTEM_INFO.h"}\par
00002 {\cf21 #include <UTILLITY_F.h>}\par
00003 {\cf17 namespace }SYSTEM \{\par
00004     {\cf17 namespace }SYSTEM_INFO \{\par
00005         {\cf17 extern} {\cf18 size_t} QueryCPUFrequency();\par
00006         SYSTEM::STARTUP::PAGING::GlobalPageMap GlobalPageMap = \{\};\par
00007         SystemInfo SystemInfo::GLobalInst = SystemInfo();\par
00008         SystemInfo::SystemInfo(SystemInfo&& other) \{\par
00009             this->cpuCores = STD::move(other.cpuCores);\par
00010             this->installedRam = STD::move(other.installedRam);\par
00011         \}\par
00012         SystemInfo& SystemInfo::operator=(SystemInfo&& other) \par
00013         \{\par
00014             this->cpuCores = STD::move(other.cpuCores);\par
00015             this->installedRam = STD::move(other.installedRam);\par
00016             {\cf19 return} *{\cf17 this};\par
00017         \}\par
00018          {\cf18 void} SystemInfo::InitSystemInfo()\par
00019         \{\par
00020             GLobalInst = SystemInfo();\par
00021             GLobalInst.installedRam = SYSTEM::STARTUP::PAGING::QueryInstalledRam();\par
00022 \par
00023         \}\par
00024 \par
00025           {\cf17 const} SystemInfo& SystemInfo::GetInstance() \{\par
00026              {\cf19 return} GLobalInst;\par
00027          \}\par
00028 \par
00029 \par
00030     \par
00031     \par
00032 \par
00033           {\cf18 size_t} QueryCPUFrequency()\par
00034           \{\par
00035 \par
00036               {\cf19 return} size_t();\par
00037           \}\par
00038 \par
00039     \}\par
00040 \}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
